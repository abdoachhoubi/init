const extended = [
  { key: `10Q`, value: `thank you` },
  { key: `10X`, value: `thanks` },
  { key: `1337`, value: `elite ("leet")` },
  { key: `224`, value: `today, tomorrow, forever` },
  { key: `31337`, value: `elite ("eleet")` },
  { key: `4TW`, value: `for the win` },
  { key: `A/S/L`, value: `age/sex/location` },
  { key: `AAMOF`, value: `as a matter of fact` },
  { key: `ABD`, value: `all but dissertation` },
  { key: `AC`, value: `audible chuckle` },
  { key: `ADD`, value: `attention deficit disorder` },
  { key: `ADHD`, value: `attention deficit (and) hyperactivity disorder` },
  { key: `ADN`, value: `any day now` },
  { key: `ADOS`, value: `attention deficit ... oh, shiny!` },
  { key: `AEAP`, value: `as early as possible` },
  { key: `AFAIAC`, value: `as far as I am concerned` },
  { key: `AFAIC`, value: `as far as I'm concerned` },
  { key: `AFAICR`, value: `as far as I can {recall,remember}` },
  { key: `AFAICS`, value: `as far as I can see` },
  { key: `AFAICT`, value: `as far as I can tell` },
  { key: `AFAIK`, value: `as far as I know` },
  { key: `AFAIR`, value: `as far as I {recall,remember}` },
  { key: `AFAIU`, value: `as far as I understand` },
  { key: `AFD`, value: `away from desktop` },
  { key: `AFK`, value: `away from keyboard` },
  { key: `AFW`, value: `away from window` },
  { key: `AGM`, value: `annual general meeting` },
  { key: `AINEC`, value: `and it's not even close` },
  { key: `AISE`, value: `as I see it` },
  { key: `AIU`, value: `as I understand` },
  { key: `AIUI`, value: `as I understand it` },
  { key: `AKA`, value: `also known as` },
  { key: `AM`, value: `ante meridiem` },
  { key: `AMOL`, value: `a mountain of love` },
  { key: `ASAIC`, value: `as soon as I can` },
  { key: `ASAP`, value: `as soon as possible` },
  { key: `ASL`, value: `age/sex/location` },
  { key: `ATEOTD`, value: `at the end of the day` },
  { key: `ATM`, value: `at the moment` },
  { key: `ATM`, value: `{automated,automatic} teller machine` },
  { key: `ATW`, value: `around the world` },
  { key: `AWK`, value: `Aho, Weinberger, [and] Kernighan` },
  { key: `AWOL`, value: `absent without official leave` },
  { key: `AYBABTU`, value: `all your base are belong to us` },
  { key: `AYF`, value: `all your fault` },
  { key: `AYOR`, value: `at your own risk` },
  { key: `AYT`, value: `are you there` },
  { key: `B&`, value: `banned` },
  { key: `B/C`, value: `because` },
  { key: `B/W`, value: `bandwidth` },
  { key: `B/W`, value: `between` },
  { key: `BAI`, value: `goodbye` },
  { key: `BAK`, value: `back at keyboard` },
  { key: `BBIAB`, value: `be back in a bit` },
  { key: `BBL`, value: `[I'll] be back later` },
  { key: `BBR`, value: `burnt beyond repair` },
  { key: `BBS`, value: `be back soon` },
  { key: `BBT`, value: `be back tomorrow` },
  { key: `BCNU`, value: `be seeing you` },
  { key: `BCNUL8R`, value: `be seeing you later` },
  { key: `BCP`, value: `best current practice` },
  { key: `BF`, value: `best friend` },
  { key: `BF`, value: `boyfriend` },
  { key: `BFF`, value: `best {friend,friends} forever` },
  { key: `BIAB`, value: `back in a bit` },
  { key: `BIAF`, value: `back in a few` },
  { key: `BIALW`, value: `back in a little while` },
  { key: `BIAS`, value: `back in a second` },
  { key: `BIAW`, value: `back in a while` },
  { key: `BNYA`, value: `burned now you are` },
  { key: `BOC`, value: `but of course` },
  { key: `BOFH`, value: `bastard operator from hell` },
  { key: `BOT`, value: `back on topic` },
  { key: `BRB`, value: `[I'll] be right back` },
  { key: `BSD`, value: `booze, sex, drugs` },
  { key: `BTDT`, value: `been there, done that` },
  { key: `BTFT`, value: `been there, fixed that` },
  { key: `BTTH`, value: `boot to the head` },
  { key: `BTW`, value: `by the way` },
  { key: `BYOB`, value: `bring your own {beer,booze}` },
  { key: `CC`, value: `credit card` },
  { key: `CEO`, value: `chief executive officer` },
  { key: `CFV`, value: `call for votes` },
  { key: `CFY`, value: `calling for you` },
  { key: `CG`, value: `center of gravity` },
  { key: `CHANOPS`, value: `channel operator status` },
  { key: `CMIIW`, value: `correct me if I'm wrong` },
  { key: `CNP`, value: `continued [in my] next post` },
  { key: `COB`, value: `close of business [day]` },
  { key: `COTS`, value: `commercial off-the-shelf` },
  { key: `CPC`, value: `cost per click` },
  { key: `CPE`, value: `customer premises equipment` },
  { key: `CTN`, value: `can't talk now` },
  { key: `CU`, value: `see you` },
  { key: `CUL`, value: `see you later` },
  { key: `CYA`, value: `see ya` },
  { key: `CYA`, value: `see you around` },
  { key: `CYE`, value: `check your email` },
  { key: `D/B/A`, value: `doing business as` },
  { key: `D/L`, value: `download` },
  { key: `DBA`, value: `doing business as` },
  { key: `DBEYR`, value: `don't believe everything you read` },
  { key: `DIAFYO`, value: `did I ask for your opinion?` },
  { key: `DIY`, value: `do it yourself` },
  { key: `DKDC`, value: `don't know, don't care` },
  { key: `DM`, value: `dungeon master` },
  { key: `DMZ`, value: `demilitarized zone` },
  { key: `DND`, value: `do not disturb` },
  { key: `DOA`, value: `dead on arrival` },
  { key: `DRY`, value: `don't repeat yourself` },
  { key: `DSTM`, value: `don't shoot the messenger` },
  { key: `DTRT`, value: `do the right thing` },
  { key: `DTWT`, value: `do the wrong thing` },
  { key: `DWIM`, value: `do what I mean` },
  { key: `DYK`, value: `do you know?` },
  { key: `ECR`, value: `electronic cash register` },
  { key: `EDS`, value: `eternal downward spiral` },
  { key: `EFT`, value: `electronic funds transfer` },
  { key: `EG`, value: `evil grin` },
  { key: `EIE`, value: `enough is enough` },
  { key: `EMSG`, value: `email message` },
  { key: `EOB`, value: `end of business [day]` },
  { key: `EOD`, value: `end of {day,discussion}` },
  { key: `EOL`, value: `end of life` },
  { key: `EOM`, value: `end of message` },
  { key: `EOS`, value: `end of story` },
  { key: `ETA`, value: `edited to add` },
  { key: `ETA`, value: `estimated time of arrival` },
  { key: `ETLA`, value: `extended three letter acronym` },
  { key: `ETR`, value: `early to rise` },
  { key: `EWAG`, value: `experienced wild-ass guess` },
  { key: `EZ`, value: `easy` },
  { key: `EZPZ`, value: `easy-peasy` },
  { key: `F9`, value: `fine` },
  { key: `FAQ`, value: `frequently asked question` },
  { key: `FBOW`, value: `for better or worse` },
  { key: `FCFS`, value: `first come, first served` },
  { key: `FCOL`, value: `for crying out loud` },
  { key: `FFS`, value: `free for shipping` },
  { key: `FITB`, value: `fill in the blank` },
  { key: `FNO`, value: `for nerds only` },
  { key: `FNO`, value: `from now on` },
  { key: `FOC`, value: `free of charge` },
  { key: `FPS`, value: `first person shooter` },
  { key: `FPS`, value: `frames per second` },
  { key: `FSDO`, value: `for some definition of` },
  { key: `FSVO`, value: `for some value of` },
  { key: `FTBFS`, value: `fails to build from source` },
  { key: `FTFY`, value: `fixed that for you` },
  { key: `FTHOI`, value: `for the {heck,hell} of it` },
  { key: `FTL`, value: `faster than light` },
  { key: `FTL`, value: `for the loss` },
  { key: `FTTT`, value: `from time to time` },
  { key: `FTW`, value: `for the win` },
  { key: `FUD`, value: `fear, uncertainty, [and] doubt` },
  { key: `FWIW`, value: `for what it's worth` },
  { key: `FYEO`, value: `for your eyes only` },
  { key: `FYI`, value: `for your information` },
  { key: `G`, value: `grin` },
  { key: `G/C`, value: `garbage collect` },
  { key: `G2G`, value: `got to go` },
  { key: `G2K`, value: `good to know` },
  { key: `GA`, value: `go ahead` },
  { key: `GAC`, value: `get a clue` },
  { key: `GAL`, value: `get a life` },
  { key: `GBTW`, value: `get back to work` },
  { key: `GF`, value: `girlfriend` },
  { key: `GFU`, value: `good for you` },
  { key: `GFY`, value: `good for you` },
  { key: `GG`, value: `good game` },
  { key: `GGA`, value: `good game all` },
  { key: `GGP`, value: `good game partner` },
  { key: `GGWP`, value: `good game, well played` },
  { key: `GIGO`, value: `garbage in, garbage out` },
  { key: `GIYF`, value: `Google is your friend` },
  { key: `GJ`, value: `good job` },
  { key: `GL`, value: `good luck` },
  { key: `GLHF`, value: `good luck, have fun` },
  { key: `GLINE`, value: `global kill line` },
  { key: `GLWT`, value: `good luck with that` },
  { key: `GM`, value: `game master` },
  { key: `GMT`, value: `Greenwich mean time` },
  { key: `GMTA`, value: `great minds think alike` },
  { key: `GOK`, value: `God only knows` },
  { key: `GOWI`, value: `get on with it` },
  { key: `GPS`, value: `global positioning system` },
  { key: `GR8`, value: `great` },
  { key: `GTG`, value: `got to go` },
  { key: `GTH`, value: `go to hell` },
  { key: `GTSY`, value: `{glad,good} to see you` },
  { key: `GWS`, value: `get well soon` },
  { key: `H8`, value: `hate` },
  { key: `HAND`, value: `have a nice day` },
  { key: `HE`, value: `how embarrasing` },
  { key: `HF`, value: `have fun` },
  { key: `HHIS`, value: `hanging head in shame` },
  { key: `HHOS`, value: `ha ha, only serious` },
  { key: `HICA`, value: `here it comes again` },
  { key: `HNY`, value: `happy new year` },
  { key: `HOAS`, value: `hold on a second` },
  { key: `HOPS`, value: `half-operator status` },
  { key: `HTH`, value: `hope this helps` },
  { key: `IAC`, value: `in any case` },
  { key: `IAE`, value: `in any event` },
  { key: `IANAL`, value: `I am not a lawyer` },
  { key: `IAW`, value: `in another window` },
  { key: `IAWTC`, value: `I agree with this comment` },
  { key: `IAWTP`, value: `I agree with this post` },
  { key: `IAY`, value: `I adore you` },
  { key: `IB`, value: `I'm back` },
  { key: `IC`, value: `I see` },
  { key: `ICBW`, value: `I could be {worse,wrong}` },
  { key: `ICCL`, value: `I couldn't care less` },
  { key: `ICUR`, value: `I see you are` },
  { key: `ICYMI`, value: `in case you missed it` },
  { key: `IDC`, value: `I don't care` },
  { key: `IDGI`, value: `I don't get it` },
  { key: `IDGW`, value: `in a good way` },
  { key: `IDI`, value: `I doubt it` },
  { key: `IDIFTL`, value: `I did it for the lulz` },
  { key: `IDK`, value: `I don't know` },
  { key: `IDRC`, value: `I don't really care` },
  { key: `IDTS`, value: `I don't think so` },
  { key: `IDTT`, value: `I drink to that` },
  { key: `IHBW`, value: `I have been wrong` },
  { key: `IIANM`, value: `if I am not mistaken` },
  { key: `IIRC`, value: `if I {recall,remember} correctly` },
  { key: `IIUC`, value: `if I understand correctly` },
  { key: `IKR`, value: `I know, right?` },
  { key: `IKWYM`, value: `I know what you mean` },
  { key: `ILU`, value: `I love you` },
  { key: `ILY`, value: `I love you` },
  { key: `IMAO`, value: `in my arrogant opinion` },
  { key: `IMBO`, value: `in my biased opinion` },
  { key: `IMCO`, value: `in my considered opinion` },
  { key: `IMHO`, value: `in my humble opinion` },
  { key: `IMNSHO`, value: `in my not so humble opinion` },
  { key: `IMO`, value: `in my opinion` },
  { key: `INB4`, value: `in before` },
  { key: `INPO`, value: `in no particular order` },
  { key: `IOW`, value: `in other words` },
  { key: `IPML`, value: `I pissed myself laughing` },
  { key: `IQ`, value: `intelligence quotient` },
  { key: `IRCOP`, value: `Internet relay chat {operator,operators}` },
  { key: `IRCOPS`, value: `Internet relay chat operator status` },
  { key: `IRL`, value: `in real life` },
  { key: `IRT`, value: `in real time` },
  { key: `IRT`, value: `in regards to` },
  { key: `ISAGN`, value: `I see a great need` },
  { key: `ISBN`, value: `International Standard Book Number` },
  { key: `ISTM`, value: `it seems to me` },
  { key: `ISTR`, value: `I seem to {recall,remember}` },
  { key: `ITC`, value: `in this {channel,chat}` },
  { key: `ITT`, value: `in this thread` },
  { key: `ITYM`, value: `I think you mean` },
  { key: `IUD`, value: `insert usual disclaimers` },
  { key: `IUSS`, value: `if you say so` },
  { key: `IW`, value: `it's worse` },
  { key: `IWBNI`, value: `it would be nice if` },
  { key: `IYD`, value: `in your dreams` },
  { key: `IYKWIM`, value: `if you know what I mean` },
  { key: `IYSS`, value: `if you say so` },
  { key: `IYSWIM`, value: `if you see what I mean` },
  { key: `J/K`, value: `just kidding` },
  { key: `JAM`, value: `just a minute` },
  { key: `JAS`, value: `just a second` },
  { key: `JFK`, value: `John Fitzgerald Kennedy` },
  { key: `JFTR`, value: `just for the record` },
  { key: `JFYI`, value: `just for your information` },
  { key: `JGI`, value: `just Google it` },
  { key: `JGI`, value: `just got it` },
  { key: `JHD`, value: `just hit delete` },
  { key: `JIC`, value: `just in case` },
  { key: `JJA`, value: `just joking around` },
  { key: `JK`, value: `just kidding` },
  { key: `JMO`, value: `just my opinion` },
  { key: `JSYK`, value: `just so you know` },
  { key: `JTLYK`, value: `just to let you know` },
  { key: `JW`, value: `just wondering` },
  { key: `KISS`, value: `keep it simple, stupid` },
  { key: `KITA`, value: `kick in the ass` },
  { key: `KK`, value: `okay, okay` },
  { key: `KLINE`, value: `kill line` },
  { key: `KMA`, value: `keep me advised` },
  { key: `KMA`, value: `keep moving ahead` },
  { key: `KMA`, value: `kill me already` },
  { key: `KNF`, value: `kernel normal form` },
  { key: `KOS`, value: `kill on sight` },
  { key: `KTHX`, value: `okay, thanks` },
  { key: `KTHXBAI`, value: `okay, thanks. Goodbye.` },
  { key: `KWIM`, value: `know what I mean?` },
  { key: `L8`, value: `late` },
  { key: `L8R`, value: `later` },
  { key: `LART`, value: `luser attitude readjustment tool` },
  { key: `LBNL`, value: `last but not least` },
  { key: `LGTM`, value: `looks good to me` },
  { key: `LJBF`, value: `let's just be friends` },
  { key: `LMAO`, value: `laughing my ass off` },
  { key: `LMC`, value: `let me check` },
  { key: `LMGTFY`, value: `let me google that for you` },
  { key: `LMHO`, value: `laughing my head off` },
  { key: `LMK`, value: `let me know` },
  { key: `LMNO`, value: `laughing my nuts off` },
  { key: `LMSO`, value: `laughing my socks off` },
  { key: `LOIC`, value: `low orbit ion cannon` },
  { key: `LOL`, value: `laughing out loud` },
  { key: `LP`, value: `long playing [record]` },
  { key: `LTNS`, value: `long time no see` },
  { key: `LWYL`, value: `laugh with you later` },
  { key: `M8`, value: `mate` },
  { key: `MAD`, value: `mutually assured destruction` },
  { key: `MFW`, value: `my face when` },
  { key: `MIA`, value: `missing in action` },
  { key: `MMB`, value: `message me back` },
  { key: `MO`, value: `modus operandi` },
  { key: `MOTAS`, value: `member of the appropriate sex` },
  { key: `MOTOS`, value: `member of the opposite sex` },
  { key: `MOTSS`, value: `member of the same sex` },
  { key: `MTF`, value: `more to follow` },
  { key: `MYOB`, value: `mind your own business` },
  { key: `N/A`, value: `not {applicable,available}` },
  { key: `N/M`, value: `never mind` },
  { key: `NAFAIK`, value: `not as far as I know` },
  { key: `NBD`, value: `no big deal` },
  { key: `NE1`, value: `anyone` },
  { key: `NEDM`, value: `not even Doom music` },
  { key: `NFA`, value: `no flaming allowed` },
  { key: `NIFOC`, value: `naked in front of computer` },
  { key: `NIH`, value: `not invented here` },
  { key: `NIMBY`, value: `not in my backyard` },
  { key: `NM`, value: `never mind` },
  { key: `NMF`, value: `not my fault` },
  { key: `NMP`, value: `not my problem` },
  { key: `NMU`, value: `not much, you?` },
  { key: `NOM`, value: `no offence meant` },
  { key: `NOOB`, value: `newbie` },
  { key: `NORP`, value: `normal ordinary {respectable,responsible} person` },
  { key: `NOYB`, value: `none of your business` },
  { key: `NP`, value: `no problem` },
  { key: `NPC`, value: `non-player character` },
  { key: `NRFPT`, value: `not ready for prime time` },
  { key: `NRN`, value: `no reply necessary` },
  { key: `NRN`, value: `not right now` },
  { key: `NSFW`, value: `not suitable for work` },
  { key: `NTN`, value: `no thanks needed` },
  { key: `NUNP`, value: `no users, no problems` },
  { key: `NVM`, value: `never mind` },
  { key: `NW`, value: `no way` },
  { key: `NXT`, value: `next` },
  { key: `NYPA`, value: `not your personal army` },
  { key: `O2W`, value: `off to work` },
  { key: `OAO`, value: `over and out` },
  { key: `OBV`, value: `obviously` },
  { key: `OBVS`, value: `obviously` },
  { key: `ODTW`, value: `others do the work (cf. "otdw source")` },
  { key: `OFC`, value: `of course` },
  { key: `OH`, value: `other half` },
  { key: `OIC`, value: `oh, I see` },
  { key: `OMG`, value: `oh my God` },
  { key: `OMW`, value: `on my way` },
  { key: `ONNA`, value: `oh no, not again` },
  { key: `ONNTA`, value: `oh no, not this again` },
  { key: `OOB`, value: `out of bounds` },
  { key: `OOC`, value: `out of curiosity` },
  { key: `OOI`, value: `out of interest` },
  { key: `OOSOOM`, value: `out of sight, out of mind` },
  { key: `OPS`, value: `operator status` },
  { key: `OPS`, value: `operators` },
  { key: `ORITE`, value: `oh, right` },
  { key: `OT`, value: `off topic` },
  { key: `OTL`, value: `out to lunch` },
  { key: `OTOH`, value: `on the other hand` },
  { key: `OTP`, value: `one true pairing` },
  { key: `OTS`, value: `off the shelf` },
  { key: `OTT`, value: `over the top` },
  { key: `OTTOMH`, value: `off the top of my head` },
  { key: `OWTTE`, value: `or words to that effect` },
  { key: `PC`, value: `player character` },
  { key: `PC`, value: `politically correct` },
  { key: `PCB`, value: `polychlorinated biphenyl(s)` },
  { key: `PD`, value: `police department` },
  { key: `PDA`, value: `public display of affection` },
  { key: `PDQ`, value: `pretty darn quick` },
  { key: `PDS`, value: `please don't shout` },
  { key: `PEBCAK`, value: `problem exists between chair and keyboard` },
  { key: `PEBKAC`, value: `problem exists between keyboard and chair` },
  { key: `PFI`, value: `pay for inclusion` },
  { key: `PFY`, value: `pimply faced youth` },
  { key: `PHB`, value: `pointy haired boss` },
  { key: `PIN`, value: `personal identification number` },
  { key: `PITA`, value: `pain in the ass` },
  { key: `PITR`, value: `{parent,parents} in the room` },
  { key: `PKSP`, value: `pound keys and spew profanity` },
  { key: `PM`, value: `post meridiem` },
  { key: `PMFI`, value: `problem magically fixed itself` },
  { key: `PMFJI`, value: `pardon me for jumping in` },
  { key: `PMSL`, value: `pissing myself laughing` },
  { key: `PNG`, value: `persona non grata` },
  { key: `PNP`, value: `plug and pray` },
  { key: `POC`, value: `point of contact` },
  { key: `POC`, value: `proof of concept` },
  { key: `POLA`, value: `principle of least astonishment` },
  { key: `POLS`, value: `principle of least surprise` },
  { key: `POS`, value: `point of sale` },
  { key: `POV`, value: `point of view` },
  { key: `PPL`, value: `people` },
  { key: `PPL`, value: `pretty please` },
  { key: `PPP`, value: `petty pet peeve` },
  { key: `PR`, value: `public relations` },
  { key: `PTV`, value: `parental tunnel vision` },
  { key: `QED`, value: `quod erat demonstrandum` },
  { key: `QFT`, value: `quoted for truth` },
  { key: `RA`, value: `residential advisor` },
  { key: `RFC`, value: `request for comments` },
  { key: `RFD`, value: `request for discussion` },
  { key: `RFE`, value: `request for enhancements` },
  { key: `RIP`, value: `rest in peace` },
  { key: `RL`, value: `real life` },
  { key: `RLC`, value: `rod length check` },
  { key: `RMS`, value: `Richard Matthew Stallman` },
  { key: `ROFL`, value: `rolling on floor laughing` },
  { key: `ROFLMAO`, value: `rolling on floor laughing my ass off` },
  { key: `ROI`, value: `return on investment` },
  { key: `ROTFL`, value: `rolling on the floor laughing` },
  { key: `RP`, value: `responsible person` },
  { key: `RR`, value: `railroad` },
  { key: `RSI`, value: `repetitive strain injury` },
  { key: `RSN`, value: `real soon now` },
  { key: `RSVP`, value: `respondez s'il vous plait ("reply please")` },
  { key: `S/T`, value: `self titled` },
  { key: `SAR`, value: `search and rescue` },
  { key: `SAR`, value: `some assembly required` },
  { key: `SCNR`, value: `sorry, could not resist` },
  { key: `SEP`, value: `someone else's problem` },
  { key: `SERP`, value: `search engine results page` },
  { key: `SFAICT`, value: `so far as I can tell` },
  { key: `SHID`, value: `slaps head in disgust` },
  { key: `SIMCA`, value: `sitting in my chair amused` },
  { key: `SITD`, value: `still in the dark` },
  { key: `SMH`, value: `shaking my head` },
  { key: `SMLSFB`, value: `so many losers, so few bullets` },
  { key: `SMOP`, value: `simple matter of programming` },
  { key: `SNERT`, value: `snot-nosed egotistical rude teenager` },
  { key: `SNMP`, value: `sorry, not my problem` },
  { key: `SO`, value: `significant other` },
  { key: `SOB`, value: `son of [a] bitch` },
  { key: `SOP`, value: `standard operating procedure` },
  { key: `SRS`, value: `serious` },
  { key: `SRSLY`, value: `seriously` },
  { key: `SSIA`, value: `subject says it all` },
  { key: `SSTO`, value: `single stage to orbit` },
  { key: `STW`, value: `search the web` },
  { key: `SUS`, value: `stupid user syndrome` },
  { key: `SUX`, value: `sucks` },
  { key: `SUX2BU`, value: `sucks to be you` },
  { key: `SWAG`, value: `silly, wild-assed guess` },
  { key: `SWAHBI`, value: `silly, wild-assed hare-brained idea` },
  { key: `SWMBO`, value: `she who must be obeyed` },
  { key: `SYS`, value: `see you soon` },
  { key: `TA`, value: `teaching assistant` },
  { key: `TANSTAAFL`, value: `there ain't no such thing as a free lunch` },
  { key: `TBA`, value: `to be announced` },
  { key: `TBC`, value: `to be continued` },
  { key: `TBD`, value: `to be {decided,determined,done}` },
  { key: `TBH`, value: `to be honest` },
  { key: `TBOMK`, value: `the best of my knowledge` },
  { key: `TCB`, value: `taking care of business` },
  { key: `TCO`, value: `taken care of` },
  { key: `TCO`, value: `total cost of ownership` },
  { key: `TFOA`, value: `things falling off aircraft` },
  { key: `TGIF`, value: `thank goodness it's Friday` },
  { key: `THNX`, value: `thanks` },
  { key: `THX`, value: `thanks` },
  { key: `TIA`, value: `thanks in advance` },
  { key: `TIAVP`, value: `this is a volunteer project` },
  { key: `TIC`, value: `tonque in cheek` },
  { key: `TIL`, value: `today I learned` },
  { key: `TINC`, value: `there is no cabal` },
  { key: `TINLA`, value: `this is not legal advice` },
  { key: `TINWIS`, value: `this is not what I said` },
  { key: `TJM`, value: `that's just me` },
  { key: `TLA`, value: `three letter acronym` },
  { key: `TLA`, value: `true love always` },
  { key: `TLC`, value: `tender loving care` },
  { key: `TLDR`, value: `too long, didn't read` },
  { key: `TM`, value: `trademark` },
  { key: `TM`, value: `trust me` },
  { key: `TMA`, value: `too many abbreviations` },
  { key: `TMG`, value: `too much government` },
  { key: `TMI`, value: `too much information` },
  { key: `TMJ`, value: `temporomandibular joint` },
  { key: `TMK`, value: `to my knowledge` },
  { key: `TMTOWTDI`, value: `there's more than one way to do it` },
  { key: `TNF`, value: `The NetBSD Foundation` },
  { key: `TOC`, value: `table of contents` },
  { key: `TOCTOU`, value: `time of check to time of use` },
  { key: `TOEFL`, value: `test of english as a foreign language` },
  { key: `TOH`, value: `to other half` },
  { key: `TP`, value: `toilet paper` },
  { key: `TPTB`, value: `the powers that be` },
  { key: `TRT`, value: `the right thing` },
  { key: `TTBOMK`, value: `to the best of my knowledge` },
  { key: `TTFN`, value: `ta ta for now` },
  { key: `TTM`, value: `to the moderator` },
  { key: `TTT`, value: `thought that too` },
  { key: `TTYL`, value: `talk to you later` },
  { key: `TTYS`, value: `talk to you soon` },
  { key: `TWAIN`, value: `thing without an interesting name` },
  { key: `TWDT`, value: `the whole damn thing` },
  { key: `TWIAVBP`, value: `the world is a very big place` },
  { key: `TY`, value: `thank you` },
  { key: `TYVM`, value: `thank you very much` },
  { key: `U/L`, value: `upload` },
  { key: `UGT`, value: `universal greeting time` },
  { key: `UR`, value: `your` },
  { key: `UR`, value: `{you're, you are}` },
  { key: `UTSL`, value: `use the source, Luke` },
  { key: `VCR`, value: `video cassette recorder` },
  { key: `VEG`, value: `very evil grin` },
  { key: `VIP`, value: `very important person` },
  { key: `W/`, value: `with` },
  { key: `W/E`, value: `whatever` },
  { key: `W/O`, value: `without` },
  { key: `W8`, value: `wait` },
  { key: `WAFWOT`, value: `what a foolish waste of time` },
  { key: `WAG`, value: `wild-ass guess` },
  { key: `WB`, value: `welcome back` },
  { key: `WCPGW`, value: `what could possibly go wrong` },
  { key: `WDYMBT`, value: `what do you mean by that` },
  { key: `WELC`, value: `working effectively with legacy code` },
  { key: `WFH`, value: `working from home` },
  { key: `WFM`, value: `works for me` },
  { key: `WIBNI`, value: `wouldn't it be nice if` },
  { key: `WIP`, value: `work in progress` },
  { key: `WMNC`, value: `watch me not care` },
  { key: `WOMBAT`, value: `waste of money, brain, and time` },
  { key: `WRT`, value: `with respect to` },
  { key: `WTB`, value: `{waiting,want,willing} to buy` },
  { key: `WTF`, value: `where's the food` },
  { key: `WTG`, value: `way to go` },
  { key: `WTH`, value: `{what,when,where,who,why} the hell` },
  { key: `WTS`, value: `{waiting,want,willing} to sell` },
  { key: `WTT`, value: `{waiting,want,willing} to trade` },
  { key: `WWJD`, value: `what would Jesus do?` },
  { key: `YAGNI`, value: `you ain't gonna need it` },
  { key: `YALIMO`, value: `you are lame, in my opinion` },
  { key: `YAOTM`, value: `yet another off-topic message` },
  { key: `YCTAT`, value: `you can't troll a troll` },
  { key: `YGM`, value: `you got mail` },
  { key: `YHBT`, value: `you have been trolled` },
  { key: `YHL`, value: `you have lost` },
  { key: `YKWIM`, value: `you know what I mean` },
  { key: `YMMV`, value: `your mileage may vary` },
  { key: `YOLO`, value: `you only live once` },
  { key: `YW`, value: `you're welcome` },
  { key: `YWSYLS`, value: `you win some, you lose some` },
];

const offensive = [
  { key: `AFU`, value: `all fucked up` },
  { key: `B/S`, value: `bullshit` },
  { key: `BAMF`, value: `bad-ass motherfucker` },
  { key: `BFD`, value: `big fucking deal` },
  { key: `BFH`, value: `big fucking hammer` },
  { key: `BS`, value: `bullshit` },
  { key: `BTFO`, value: `blown the fuck out` },
  { key: `DGAF`, value: `don't give a fuck` },
  { key: `DGAS`, value: `don't give a shit` },
  { key: `FFS`, value: `for fuck's sake` },
  { key: `FIGJAM`, value: `fuck I'm good, just ask me` },
  { key: `FIIK`, value: `{fuck,fucked} if I know` },
  { key: `FIIR`, value: `{fuck,fucked} if I {recall,remember}` },
  { key: `FM`, value: `fucking magic` },
  { key: `FML`, value: `fuck my life` },
  { key: `FOAD`, value: `{fall over,fuck off} and die` },
  { key: `FOS`, value: `full of shit` },
  { key: `FSCK`, value: `fuck` },
  { key: `FTFA`, value: `from the fucking article` },
  { key: `FTFM`, value: `fuck the fuckin' manual!` },
  { key: `FTMFW`, value: `for the motherfucking win` },
  { key: `FTS`, value: `fuck that shit` },
  { key: `FUBAR`, value: `fucked up beyond all recognition` },
  { key: `FYIAD`, value: `fuck you, I'm a dragon!` },
  { key: `GAF`, value: `give a fuck` },
  { key: `GFY`, value: `go fuck yourself` },
  { key: `GTFO`, value: `get the fuck out` },
  { key: `HFIW`, value: `HOLY FUCK IT WORKS` },
  { key: `HSIW`, value: `HOLY SHIT IT WORKS` },
  { key: `IHAFC`, value: `I haven't a fucking clue` },
  { key: `IHNFC`, value: `I have no fucking clue` },
  { key: `JFGI`, value: `just fucking Google it` },
  { key: `JFW`, value: `just fucking works` },
  { key: `LMFAO`, value: `laughing my fucking ass off` },
  { key: `NFC`, value: `no fucking clue` },
  { key: `NFI`, value: `no fucking idea` },
  { key: `NFW`, value: `no fucking way` },
  { key: `NOYFB`, value: `none of your fucking business` },
  { key: `NTSA`, value: `not this shit again` },
  { key: `OFC`, value: `of fucking course` },
  { key: `OMFG`, value: `oh my fucking God` },
  { key: `PFO`, value: `please fuck off` },
  { key: `POS`, value: `piece of shit` },
  { key: `REMF`, value: `rear echelon motherfucker` },
  { key: `RTFB`, value: `read the {fine,fucking} book` },
  { key: `RTFC`, value: `read the {fine,fucking} code` },
  { key: `RTFD`, value: `read the {fine,fucking} documentation` },
  { key: `RTFM`, value: `read the {fine,fucking} manual` },
  { key: `RTFMP`, value: `read the {fine,fucking} man page` },
  { key: `RTFS`, value: `read the {fine,fucking} source` },
  { key: `SFA`, value: `sweet fuck all` },
  { key: `SNAFU`, value: `situation normal, all fucked up` },
  { key: `SNCA`, value: `shit no one cares about` },
  { key: `SOL`, value: `shit out [of] luck` },
  { key: `STFA`, value: `search the fucking archives` },
  { key: `STFU`, value: `shut the fuck up` },
  { key: `STFW`, value: `search the fucking web` },
  { key: `SWFG`, value: `search with fucking Google` },
  { key: `WOFTAM`, value: `waste of fucking time and money` },
  { key: `WTF`, value: `{what,when,where,who,why} the fuck` },
  { key: `WTFRUD`, value: `what the fuck are you doing` },
  { key: `YMA`, value: `yo momma's ass` },
  { key: `YTF`, value: `why the fuck` },
];

const complicated = [
  { key: `3WHS`, value: `three-way handshake` },
  { key: `8VSB`, value: `8-state vestigial side band modulation` },
  { key: `A1C`, value: `airman first class`},
  { key: `A2ATD`, value: `anti-armour advanced technology demonstration`},
  { key: `A2C2`, value: `army airspace command and control`},
  { key: `AA`, value: `anti-aliasing` },
  { key: `AAA`, value: `authentication, authorization, [and] accounting` },
  { key: `AAT`, value: `average access time` },
  { key: `ABI`, value: `application binary interface` },
  { key: `ABR`, value: `available bit rate` },
  { key: `AC`, value: `alternating current` },
  { key: `ACI`, value: `adjacent channel interferer` },
  { key: `ACID`, value: `atomicity, consistency, isolation, durability` },
  { key: `ACK`, value: `Amsterdam compiler kit` },
  { key: `ACK`, value: `acknowledgement` },
  { key: `ACL`, value: `access control list` },
  { key: `ACL`, value: `active current loop` },
  { key: `ACP`, value: `auxillary control {process,program}` },
  { key: `ACPI`, value: `advanced configuration and power interface` },
  { key: `ACS`, value: `access control set` },
  { key: `ACU`, value: `automatic calling unit` },
  { key: `ADB`, value: `Apple desktop bus` },
  { key: `ADC`, value: `analog [to] digital converter` },
  { key: `ADD`, value: `acronym driven development` },
  { key: `ADO`, value: `active data objects` },
  { key: `ADP`, value: `automatic data processing` },
  { key: `ADPCM`, value: `adaptive differential pulse code modulation` },
  { key: `ADS`, value: `alternate data stream` },
  { key: `ADSL`, value: `asymmetric digital subscriber line` },
  { key: `ADT`, value: `abstract data type` },
  { key: `AES`, value: `Advanced Encryption Standard` },
  { key: `AFS`, value: `Andrew File System` },
  { key: `AGC`, value: `automatic gain control` },
  { key: `AGP`, value: `accelerated graphics port` },
  { key: `AI`, value: `analog input` },
  { key: `AI`, value: `artificial intelligence` },
  { key: `AL`, value: `access list` },
  { key: `AL`, value: `active link` },
  { key: `ALE`, value: `address latch enable` },
  { key: `ALS`, value: `ambient light sensor` },
  { key: `ALU`, value: `arithmetic and logical unit` },
  { key: `AM`, value: `access method` },
  { key: `AM`, value: `alignment mask` },
  { key: `AM`, value: `amplitude modulation` },
  { key: `AMI`, value: `alternate mark inversion` },
  { key: `AMQP`, value: `advanced message queuing protocol` },
  { key: `AMT`, value: `active management technology` },
  { key: `AN`, value: `Arabic number` },
  { key: `ANSI`, value: `American National Standards Institute` },
  { key: `AO`, value: `analog output` },
  { key: `AOL`, value: `Alert-on-LAN` },
  { key: `AOS`, value: `add or subtract` },
  { key: `AP`, value: `access point` },
  { key: `AP`, value: `application processor` },
  { key: `API`, value: `application programming interface` },
  { key: `APIC`, value: `advanced programmable interrupt controller` },
  { key: `APIPA`, value: `automatic private IP addressing` },
  { key: `APT`, value: `advanced persistent threat` },
  { key: `AQM`, value: `active queue management` },
  { key: `ARAT`, value: `always running APIC timer` },
  { key: `ARC`, value: `adaptive replacement cache` },
  { key: `ARM`, value: `Advanced RISC Machines` },
  { key: `ARP`, value: `Address Resolution Protocol` },
  { key: `ARPA`, value: `Advanced Research Projects Agency` },
  { key: `ARQ`, value: `automatic repeat request` },
  { key: `ARR`, value: `address range register` },
  { key: `ARU`, value: `audio response unit` },
  { key: `AS`, value: `autonomous system` },
  { key: `ASC`, value: `advanced smart cache` },
  { key: `ASCII`, value: `American Standard Code for Information Interchange` },
  { key: `ASD`, value: `agile software development` },
  { key: `ASE`, value: `advanced software environment` },
  { key: `ASEAN`, value: `association of southeast asian nations` },
  { key: `ASIC`, value: `application-specific integrated circuit` },
  { key: `ASIC`, value: `australian securities and investments commission` },
  { key: `ASIC`, value: `aviation security identification card` },
  { key: `ASICS`, value: `anima sana in corpore sano (Latin, "A sound mind in a sound body")` },
  { key: `ASK`, value: `amplitude shif keying` },
  { key: `ASLR`, value: `address space layout randomization` },
  { key: `ASN`, value: `autonomous system number` },
  { key: `ASP`, value: `active server pages` },
  { key: `ASPM`, value: `active state power management` },
  { key: `ASQ`, value: `automated software quality` },
  { key: `ASR`, value: `address space register` },
  { key: `AST`, value: `abstract syntax tree` },
  { key: `AST`, value: `asynchronous trap` },
  { key: `AT`, value: `access time` },
  { key: `AT`, value: `advanced technology` },
  { key: `ATA`, value: `advanced technology attachment` },
  { key: `ATAPI`, value: `advanced technology attachment packet interface` },
  { key: `ATC`, value: `address translation cache` },
  { key: `ATM`, value: `asynchronous transfer mode` },
  { key: `ATX`, value: `advanced technology extended` },
  { key: `AV`, value: `anti virus` },
  { key: `AVL`, value: `Adelson-Velsky-Landis` },
  { key: `AVX`, value: `advanced vector extensions` },
  { key: `BA`, value: `byte align` },
  { key: `BAL`, value: `basic assembly language` },
  { key: `BAR`, value: `base address register` },
  { key: `BBS`, value: `bulletin board system` },
  { key: `BCC`, value: `blind carbon copy` },
  { key: `BCD`, value: `binary coded decimal` },
  { key: `BCR`, value: `byte count register` },
  { key: `BCS`, value: `base configuration space` },
  { key: `BD`, value: `baud` },
  { key: `BDD`, value: `binary decision diagram` },
  { key: `BDI`, value: `bit deinterleave` },
  { key: `BDUF`, value: `big design up front` },
  { key: `BEDO`, value: `burst extended data output` },
  { key: `BER`, value: `basic encoding rules` },
  { key: `BER`, value: `bit error {rate,ratio}` },
  { key: `BFD`, value: `binary {file,format} descriptor` },
  { key: `BFKL`, value: `big fscking kernel lock` },
  { key: `BFS`, value: `breadth-first search` },
  { key: `BFT`, value: `binary file transfer` },
  { key: `BGA`, value: `ball grid array` },
  { key: `BGP`, value: `Border Gateway Protocol` },
  { key: `BIND`, value: `Berkeley Internet Name Daemon` },
  { key: `BIOS`, value: `Basic Input/Output System` },
  { key: `BIOS`, value: `built-in operating system` },
  { key: `BIST`, value: `built-in self-test` },
  { key: `BIU`, value: `bus interface unit` },
  { key: `BKDG`, value: `BIOS and kernel developer's guide` },
  { key: `BLAS`, value: `basic linear algebra subprograms` },
  { key: `BLC`, value: `back light control` },
  { key: `BLOB`, value: `binary large object` },
  { key: `BM`, value: `bus master` },
  { key: `BMC`, value: `baseboard management controller` },
  { key: `BMIC`, value: `bus master interface controller` },
  { key: `BN`, value: `boundary neutral` },
  { key: `BNF`, value: `Backus-Naur form` },
  { key: `BO`, value: `binary output` },
  { key: `BOF`, value: `beginning of file` },
  { key: `BOM`, value: `beginning of message` },
  { key: `BOM`, value: `byte order mark` },
  { key: `BP`, value: `base pointer` },
  { key: `BP`, value: `boot processor` },
  { key: `BPB`, value: `BIOS parameter block` },
  { key: `BPF`, value: `Berkeley Packet Filter` },
  { key: `BPI`, value: `bits per inch` },
  { key: `BPM`, value: `business process modelling` },
  { key: `BPS`, value: `bits per second` },
  { key: `BPSK`, value: `binary phase shift keying` },
  { key: `BQS`, value: `Berkeley quality software` },
  { key: `BRE`, value: `basic regular expression` },
  { key: `BS`, value: `backspace` },
  { key: `BS`, value: `binary sequence` },
  { key: `BSA`, value: `basic service area` },
  { key: `BSD`, value: `Berkeley Software Distribution` },
  { key: `BSF`, value: `bit scan forward` },
  { key: `BSOD`, value: `blue screen of death` },
  { key: `BSP`, value: `binary space partition` },
  { key: `BSP`, value: `bootstrap processor` },
  { key: `BSR`, value: `bit scan reverse` },
  { key: `BSS`, value: `basic service set` },
  { key: `BSS`, value: `block started by symbol` },
  { key: `BSSID`, value: `basic service set identifier` },
  { key: `BT`, value: `BitTorrent` },
  { key: `BT`, value: `Bluetooth` },
  { key: `BT`, value: `bit test` },
  { key: `BTC`, value: `bit test [and] complement` },
  { key: `BTR`, value: `bit test [and] reset` },
  { key: `BTS`, value: `bit test [and] set` },
  { key: `BTS`, value: `bits per second` },
  { key: `BW`, value: `bandwidth` },
  { key: `BWM`, value: `block-write mode` },
  { key: `CA`, value: `certificate authority` },
  { key: `CAD`, value: `computer-aided design` },
  { key: `CAM`, value: `computer assisted manufacturing` },
  { key: `CAM`, value: `conditional access module` },
  { key: `CAM`, value: `content addressable memory` },
  { key: `CARP`, value: `Common Address Redundancy Protocol` },
  { key: `CAS`, value: `column address strobe` },
  { key: `CAS`, value: `compare and swap` },
  { key: `CAS`, value: `computer algebra system` },
  { key: `CASE`, value: `computer aided software engineering` },
  { key: `CAU`, value: `control access unit` },
  { key: `CAV`, value: `constant angular velocity` },
  { key: `CBC`, value: `cipher block chaining` },
  { key: `CBR`, value: `constant bit rate` },
  { key: `CC`, value: `carbon coby` },
  { key: `CCD`, value: `charge coupled device` },
  { key: `CCI`, value: `co-channel interferer` },
  { key: `CD`, value: `cache disable` },
  { key: `CD`, value: `compact disc` },
  { key: `CDDA`, value: `compact disc digital audio` },
  { key: `CDMA`, value: `code division multiple access` },
  { key: `CDRAM`, value: `cache dynamic random access memory` },
  { key: `CER`, value: `canonical encoding rules` },
  { key: `CF`, value: `compact flash` },
  { key: `CFG`, value: `context-free grammar` },
  { key: `CFG`, value: `control-flow graph` },
  { key: `CG`, value: `control gate` },
  { key: `CGA`, value: `Color Graphics Adapter` },
  { key: `CGI`, value: `common gateway interface` },
  { key: `CGN`, value: `Carrier-Grade NAT` },
  { key: `CHAP`, value: `Challenge-Handshake Authentication Protocol` },
  { key: `CHS`, value: `cylinder/head/sector` },
  { key: `CI`, value: `continuous integration` },
  { key: `CI`, value: `{common,component} interface` },
  { key: `CIDR`, value: `Classless Inter-Domain Routing` },
  { key: `CIFS`, value: `Common Internet File System` },
  { key: `CIL`, value: `common intermediate language` },
  { key: `CIR`, value: `carrier-to-interference ratio` },
  { key: `CIS`, value: `contact image sensor` },
  { key: `CISC`, value: `complex instruction set {computer,computing}` },
  { key: `CJK`, value: `Chinese, Japanese, [and] Korean` },
  { key: `CLF`, value: `common log format` },
  { key: `CLI`, value: `command line interface` },
  { key: `CLR`, value: `common language runtime` },
  { key: `CLTT`, value: `closed loop thermal throttling` },
  { key: `CLUT`, value: `color look-up table` },
  { key: `CLV`, value: `constant linear velocity` },
  { key: `CM`, value: `configuration management` },
  { key: `CMA`, value: `concert multithread architecture` },
  { key: `CMI`, value: `control management interface` },
  { key: `CMI`, value: `control method interface` },
  { key: `CMOS`, value: `complementary metal-oxide-semiconductor` },
  { key: `CMP`, value: `chip multi-processing` },
  { key: `CMS`, value: `content management system` },
  { key: `CMYK`, value: `cyan magenta yellow black` },
  { key: `CN`, value: `{common,canonical} name` },
  { key: `CNC`, value: `computer numerical control` },
  { key: `CNR`, value: `carrier-to-noise ratio` },
  { key: `COF`, value: `current operating frequency` },
  { key: `COFDM`, value: `coded orthogonal frequency division multiplexing` },
  { key: `COFF`, value: `common object file format` },
  { key: `COM`, value: `component object model` },
  { key: `COMA`, value: `cache-only memory architecture` },
  { key: `CORBA`, value: `common object request broker architecture` },
  { key: `COW`, value: `copy-on-write` },
  { key: `CP`, value: `continuous pilot` },
  { key: `CPB`, value: `core performance boost` },
  { key: `CPE`, value: `common phase error` },
  { key: `CPG`, value: `clock pulse generator` },
  { key: `CPL`, value: `current privilege level` },
  { key: `CPLD`, value: `complex programmable logic device` },
  { key: `CPP`, value: `C preprocessor` },
  { key: `CPS`, value: `characters per second` },
  { key: `CPT`, value: `command pass through` },
  { key: `CPU`, value: `central processing unit` },
  { key: `CR`, value: `carriage return` },
  { key: `CRC`, value: `cyclic redundancy check` },
  { key: `CRL`, value: `carrier recovery loop` },
  { key: `CRLF`, value: `carriage return line feed` },
  { key: `CRT`, value: `cathode ray tube` },
  { key: `CS`, value: `cable select` },
  { key: `CS`, value: `chip select` },
  { key: `CS`, value: `code segment` },
  { key: `CS`, value: `computer science` },
  { key: `CSI`, value: `channel state information` },
  { key: `CSI`, value: `common system interface` },
  { key: `CSMA`, value: `carrier sense multiple access` },
  {
    key: `CSMA/CA`,
    value: `carrier sense multiple access with collision avoidance`,
  },
  {
    key: `CSMA/CD`,
    value: `carrier sense multiple access with collision detection`,
  },
  { key: `CSR`, value: `control [and] status registers` },
  { key: `CSRG`, value: `Computer Systems Research Group` },
  { key: `CSS`, value: `cascading style sheets` },
  { key: `CSV`, value: `comma-separated values` },
  { key: `CTM`, value: `close to metal` },
  { key: `CTS`, value: `clear to send` },
  { key: `CUA`, value: `common user access` },
  { key: `CUT`, value: `coordinated universal time` },
  { key: `CV`, value: `control voltage` },
  { key: `CVS`, value: `Concurrent Versions System` },
  { key: `DA`, value: `destination address` },
  { key: `DAA`, value: `distributed application architecture` },
  { key: `DAB`, value: `digital audio broadcasting` },
  { key: `DAC`, value: `digital [to] analog converter` },
  { key: `DAC`, value: `discretionary access control` },
  { key: `DAD`, value: `duplicate address detection` },
  { key: `DAO`, value: `disk at once` },
  { key: `DAP`, value: `Directory Access Protocol` },
  { key: `DAT`, value: `digital audio tape` },
  { key: `DAT`, value: `dynamic acceleration technology` },
  { key: `DB`, value: `database` },
  { key: `DBA`, value: `database administrator` },
  { key: `DBA`, value: `dynamic bandwidth allocation` },
  { key: `DBB`, value: `data bus buffer` },
  { key: `DBC`, value: `design by contract` },
  { key: `DBL`, value: `dynamic buffer limiting` },
  { key: `DBMS`, value: `database management system` },
  { key: `DBS`, value: `database server` },
  { key: `DC`, value: `direct current` },
  { key: `DCC`, value: `Direct Client-to-Client` },
  { key: `DCC`, value: `direct cable connect` },
  { key: `DCD`, value: `data carrier detect` },
  { key: `DCE`, value: `data control equipment` },
  { key: `DCE`, value: `distributed computing environment` },
  { key: `DCOM`, value: `distributed component object model` },
  { key: `DCOP`, value: `Desktop COmmunication Protocol` },
  { key: `DCS`, value: `data collection systems` },
  { key: `DCT`, value: `discrete cosine transform` },
  { key: `DCU`, value: `data cache unit` },
  { key: `DDC`, value: `display data channel` },
  { key: `DDE`, value: `dynamic data exchange` },
  { key: `DDK`, value: `device driver kit` },
  { key: `DDL`, value: `data description language` },
  { key: `DDR`, value: `double data rate` },
  { key: `DDS`, value: `direct digital sound` },
  { key: `DDWG`, value: `Digital Display Working Group` },
  { key: `DE`, value: `debugging extensions` },
  { key: `DE`, value: `desktop environment` },
  { key: `DEA`, value: `data encryption algorithm` },
  { key: `DEK`, value: `data encryption key` },
  { key: `DEP`, value: `data execution prevention` },
  { key: `DER`, value: `distinguished encoding rules` },
  { key: `DES`, value: `Data Encryption Standard` },
  { key: `DF`, value: `don't fragment` },
  { key: `DFA`, value: `deterministic finite automaton` },
  { key: `DFC`, value: `data flow control` },
  { key: `DFS`, value: `depth first search` },
  { key: `DFS`, value: `distributed file system` },
  { key: `DFT`, value: `diagnostic function test` },
  { key: `DFT`, value: `discrete Fourier transform` },
  { key: `DGL`, value: `data generation language` },
  { key: `DH`, value: `Diffie-Hellman` },
  { key: `DHCP`, value: `Dynamic Host Configuration Protocol` },
  { key: `DIFS`, value: `distributed inter-frame space` },
  { key: `DIMM`, value: `dual inline memory module` },
  { key: `DIRT`, value: `design in real time` },
  { key: `DL`, value: `diode logic` },
  { key: `DL`, value: `discrete logarithm` },
  { key: `DL`, value: `download` },
  { key: `DLE`, value: `data link escape` },
  { key: `DLL`, value: `dynamic link library` },
  { key: `DLP`, value: `discrete logarithm problem` },
  { key: `DMA`, value: `direct memory access` },
  { key: `DMI`, value: `desktop management interface` },
  { key: `DMS`, value: `document management system` },
  { key: `DMT`, value: `discrete multitone modulation` },
  { key: `DNARD`, value: `Digital network appliance reference design` },
  { key: `DND`, value: `drag and drop` },
  { key: `DNS`, value: `Domain Name System` },
  { key: `DOE`, value: `distributed object environment` },
  { key: `DOF`, value: `data over fibre` },
  { key: `DOM`, value: `document object model` },
  { key: `DOS`, value: `denial of service` },
  { key: `DOS`, value: `disk operating system` },
  { key: `DP`, value: `DisplayPort` },
  { key: `DPC`, value: `deferred procedure call` },
  { key: `DPCM`, value: `differential pulse code modulation` },
  { key: `DPD`, value: `dead peer detection` },
  { key: `DPI`, value: `deep packet inspection` },
  { key: `DPI`, value: `dots per inch` },
  { key: `DPL`, value: `descriptor privilege level` },
  { key: `DPS`, value: `Display PostScript` },
  { key: `DPST`, value: `display power savings technology` },
  { key: `DRAM`, value: `dynamic random access memory` },
  { key: `DRI`, value: `direct rendering infrastructure` },
  { key: `DRM`, value: `digital rights management` },
  { key: `DRRS`, value: `display refresh rate switching` },
  { key: `DS`, value: `debug store` },
  { key: `DSA`, value: `digital signature algorithm` },
  { key: `DSB`, value: `double-sideband modulation` },
  { key: `DSDT`, value: `differentiated system descriptor table` },
  { key: `DSL`, value: `digital subscriber line` },
  { key: `DSL`, value: `domain specific language` },
  { key: `DSLAM`, value: `digital subscriber line access multiplexer` },
  { key: `DSN`, value: `delivery status notification` },
  { key: `DSO`, value: `dynamic shared object` },
  { key: `DSP`, value: `digital signal processor` },
  { key: `DSSS`, value: `direct sequence spread spectrum` },
  { key: `DTD`, value: `document type definition` },
  { key: `DTE`, value: `data terminal equipment` },
  { key: `DTE`, value: `dumb terminal emulator` },
  { key: `DTL`, value: `diode-transistor logic` },
  { key: `DTS`, value: `digital thermal sensor` },
  { key: `DUT`, value: `device under test` },
  { key: `DVB`, value: `digital video broadcasting` },
  { key: `DVCS`, value: `distributed version control system` },
  { key: `DVD`, value: `digital versatile disc` },
  { key: `DVFS`, value: `dynamic voltage and frequency scaling` },
  { key: `DVI`, value: `device independent` },
  { key: `DVI`, value: `Digital Visual Interface` },
  { key: `DVR`, value: `digital video recorder` },
  { key: `E-XER`, value: `extended XML encoding rules` },
  { key: `EABI`, value: `embedded-application binary interface` },
  { key: `EAP`, value: `Extensible Authentication Protocol` },
  { key: `EBR`, value: `extended boot record` },
  { key: `EC`, value: `elliptical curve` },
  { key: `ECC`, value: `error correction code` },
  { key: `ECDL`, value: `elliptical curve discrete logarithm` },
  { key: `ECDSA`, value: `elliptical curve digital signature algorithm` },
  { key: `ECL`, value: `emitter-coupled logic` },
  { key: `ECN`, value: `explicit congestion notification` },
  { key: `ECP`, value: `enhanced capability port` },
  { key: `ECS`, value: `enhanced chip set` },
  { key: `ECS`, value: `extended configuration space` },
  { key: `EDAT`, value: `enhanced dynamic acceleration technology` },
  { key: `EDGE`, value: `explicit data graph execution` },
  { key: `EDID`, value: `extended display identification data` },
  { key: `EDO`, value: `extended data out` },
  { key: `EDS`, value: `electronical data sheet` },
  {
    key: `EEPROM`,
    value: `electrically erasable programmable read only memory`,
  },
  { key: `EFI`, value: `extensible firmware interface` },
  { key: `EFL`, value: `emitter follower logic` },
  { key: `EFM`, value: `eight to fourteen modulation` },
  { key: `EGA`, value: `Enhanced Graphics Adapter` },
  { key: `EGP`, value: `exterior gateway protocol` },
  { key: `EH`, value: `extension header` },
  { key: `EIDE`, value: `enchanced IDE` },
  { key: `EISA`, value: `extended industry standard architecture` },
  { key: `ELF`, value: `executable and linking format` },
  { key: `ELS`, value: `entry level system` },
  { key: `EMI`, value: `electro-magnetic interference` },
  { key: `EMP`, value: `electro-magnetic pulse` },
  { key: `EMR`, value: `electro-magnetic radiation` },
  { key: `EOF`, value: `end of file` },
  { key: `EOI`, value: `end of interrupt` },
  { key: `EOL`, value: `end of line` },
  { key: `EOT`, value: `end of transmission` },
  { key: `EPIC`, value: `explicitly parallel instruction computing` },
  { key: `EPP`, value: `enhanced parallel port` },
  { key: `EPRML`, value: `extended partial response, maximum likelihood` },
  { key: `EPROM`, value: `erasable programmable read only memory` },
  { key: `ERD`, value: `emergency recovery disk` },
  { key: `ERD`, value: `entity relationship diagram` },
  { key: `ERE`, value: `extended regular expression` },
  { key: `ESDRAM`, value: `enhanced synchronous dynamic random access memory` },
  { key: `ESS`, value: `electronic switching system` },
  { key: `ESS`, value: `extended service set` },
  { key: `ESSID`, value: `extended service set identifier` },
  { key: `EST`, value: `enhanced speedstep` },
  { key: `ETL`, value: `extract, transform, load` },
  { key: `EU`, value: `execution unit` },
  { key: `EULA`, value: `end user license agreement` },
  { key: `FAT`, value: `file allocation table` },
  { key: `FBRAM`, value: `frame buffer random access memory` },
  { key: `FCL`, value: `fiber channel loop` },
  { key: `FCS`, value: `frame check sequence` },
  { key: `FDC`, value: `floppy disk controller` },
  { key: `FDD`, value: `floppy disk drive` },
  { key: `FDDI`, value: `fiber distributed data interface` },
  { key: `FDE`, value: `full disk encryption` },
  { key: `FEA`, value: `finite element analysis` },
  { key: `FEC`, value: `forward error correction` },
  { key: `FET`, value: `field-effect transistor` },
  { key: `FF`, value: `form feed` },
  { key: `FFH`, value: `functional fixed hardware` },
  { key: `FFI`, value: `foreign function interface` },
  { key: `FFM`, value: `focus follows mouse` },
  { key: `FFS`, value: `Fast File System` },
  { key: `FFS`, value: `find first set` },
  { key: `FFT`, value: `fast Fourier transform` },
  { key: `FG`, value: `floating gate` },
  { key: `FHSS`, value: `frequency hop spread spectrum` },
  { key: `FID`, value: `frequency identifier` },
  { key: `FIFO`, value: `first in, first out` },
  { key: `FILO`, value: `first in, last out` },
  { key: `FIR`, value: `fast infrared` },
  { key: `FLOPS`, value: `floating [point] operations per second` },
  { key: `FLOSS`, value: `free/libre/open source software` },
  { key: `FM`, value: `frequency modulation` },
  { key: `FMR`, value: `false match rate` },
  { key: `FOSS`, value: `free/open source software` },
  { key: `FPGA`, value: `field programmable gate array` },
  { key: `FPM`, value: `fast page mode` },
  { key: `FPR`, value: `floating point register` },
  { key: `FPU`, value: `floating point unit` },
  { key: `FQDN`, value: `fully qualified domain name` },
  { key: `FRR`, value: `false rejection rate` },
  { key: `FRU`, value: `field replaceable unit` },
  { key: `FS`, value: `file system` },
  { key: `FSB`, value: `front side bus` },
  { key: `FSCK`, value: `file system check` },
  { key: `FSF`, value: `Free Software Foundation` },
  { key: `FSK`, value: `frequency shift keying` },
  { key: `FSM`, value: `finite-state machine` },
  { key: `FTA`, value: `fault tree analysis` },
  { key: `FTL`, value: `flash translation layer` },
  { key: `FTP`, value: `File Transfer Protocol` },
  { key: `FTPS`, value: `File Transfer Protocol Secure` },
  { key: `FUS`, value: `fast user switching` },
  { key: `FWH`, value: `firmware hub` },
  { key: `FWS`, value: `folding white space` },
  { key: `GAL`, value: `generic array logic` },
  { key: `GAS`, value: `generic address structure` },
  { key: `GC`, value: `garbage collector` },
  { key: `GCR`, value: `group-coded recording` },
  { key: `GDT`, value: `global descriptor table` },
  { key: `GEM`, value: `graphics environment manager` },
  { key: `GEM`, value: `graphics execution manager` },
  { key: `GENA`, value: `general event notification architecture` },
  { key: `GHC`, value: `Glasgow Haskell compiler` },
  { key: `GID`, value: `group identifier` },
  { key: `GIF`, value: `graphics interchange format` },
  { key: `GMCH`, value: `graphics and memory controller hub` },
  { key: `GNU`, value: `GNU's Not Unix` },
  { key: `GOT`, value: `global offset table` },
  { key: `GPE`, value: `general purpose event` },
  { key: `GPF`, value: `general protection fault` },
  { key: `GPG`, value: `GNU Privacy Guard` },
  { key: `GPL`, value: `[GNU] General Public License` },
  { key: `GPR`, value: `general purpose register` },
  { key: `GPS`, value: `generalized processor sharing` },
  { key: `GPT`, value: `GUID partition table` },
  { key: `GPU`, value: `graphics processing unit` },
  { key: `GR`, value: `golden ratio` },
  { key: `GRE`, value: `generic routing encapsulation` },
  { key: `GSI`, value: `global system interrupt` },
  { key: `GUI`, value: `graphical user interface` },
  { key: `GUID`, value: `globally unique identifier` },
  { key: `HA`, value: `high availability` },
  { key: `HAL`, value: `hardware abstraction layer` },
  { key: `HAT`, value: `hashed array tree` },
  { key: `HBA`, value: `host bus adapter` },
  { key: `HCF`, value: `halt and catch fire` },
  { key: `HCI`, value: `host controller interface` },
  { key: `HCI`, value: `human-computer interaction` },
  { key: `HCL`, value: `hardware compatibility list` },
  { key: `HDCP`, value: `High-bandwidth Digital Content Protection` },
  { key: `HDD`, value: `hard disk drive` },
  { key: `HDL`, value: `hardware description language` },
  { key: `HDMI`, value: `High-Definition Multimedia Interface` },
  { key: `HDTV`, value: `high-definition television` },
  { key: `HF`, value: `high frequency` },
  { key: `HFM`, value: `highest frequency mode` },
  { key: `HID`, value: `human interface device` },
  { key: `HLL`, value: `high-level language` },
  { key: `HMA`, value: `high memory area` },
  { key: `HMI`, value: `human-machine interface` },
  { key: `HOOD`, value: `hierarchical object oriented design` },
  { key: `HP`, value: `Hewlett-Packard` },
  { key: `HPC`, value: `high performance computing` },
  { key: `HPET`, value: `high precision event timer` },
  { key: `HT`, value: `hyper-threading` },
  { key: `HTC`, value: `hardware thermal control` },
  { key: `HTCC`, value: `high temperature co-fired ceramic` },
  { key: `HTML`, value: `HyperText Markup Language` },
  { key: `HTT`, value: `hyper-threading technology` },
  { key: `HTTP`, value: `Hypertext Transfer Protocol` },
  { key: `HTTPS`, value: `Hypertext Transfer Protocol Secure` },
  { key: `HVM`, value: `hardware virtual machine` },
  { key: `HZ`, value: `Hertz` },
  { key: `I2O`, value: `intelligent input/output` },
  { key: `IA`, value: `information assurance` },
  { key: `IANA`, value: `Internet Assigned Numbers Authority` },
  { key: `IBC`, value: `iterated block cipher` },
  { key: `IBM`, value: `International Business Machines` },
  { key: `IBS`, value: `instruction based sampling` },
  { key: `IBSS`, value: `independent basic service set` },
  { key: `IC`, value: `integrated circuit` },
  { key: `ICA`, value: `independent computer architecture` },
  { key: `ICB`, value: `Internet Citizen's Band` },
  { key: `ICE`, value: `in-circuit emulator` },
  { key: `ICE`, value: `internal compiler error` },
  { key: `ICH`, value: `I/O controller hub` },
  { key: `ICMP`, value: `Internet Control Message Protocol` },
  { key: `ICT`, value: `information and communications technology` },
  { key: `ICW`, value: `initialization command word` },
  { key: `IDA`, value: `Intel dynamic acceleration` },
  { key: `IDCMP`, value: `Intuition direct communication message port` },
  { key: `IDE`, value: `integrated development environment` },
  { key: `IDE`, value: `integrated drive electronics` },
  { key: `IDPS`, value: `intrusion detection [and] prevention system` },
  { key: `IDRP`, value: `inter-domain routing protocol` },
  { key: `IDS`, value: `intrusion detection system` },
  { key: `IDT`, value: `interrupt descriptor table` },
  { key: `IE`, value: `Internet Explorer` },
  { key: `IEC`, value: `International Electrotechnical Commission` },
  { key: `IEEE`, value: `Institute of Electrical and Electronics Engineers` },
  { key: `IESG`, value: `Internet Engineering Steering Group` },
  { key: `IETF`, value: `Internet Engineering Task Force` },
  { key: `IF`, value: `intermediate frequency` },
  { key: `IFCM`, value: `isochronous flow control mode` },
  { key: `IFF`, value: `Interchange File Format` },
  { key: `IGD`, value: `Internet gateway device` },
  { key: `IGMP`, value: `Internet Group Management Protocol` },
  { key: `IGP`, value: `interior gateway protocol` },
  { key: `IHV`, value: `independent hardware vendor` },
  { key: `IKE`, value: `Internet key exchange` },
  { key: `ILM`, value: `internal loopback mode` },
  { key: `ILOM`, value: `integrated lights-out management` },
  { key: `ILP`, value: `instruction level parallelism` },
  { key: `IM`, value: `instant messaging` },
  { key: `IMAP`, value: `Internet Message Access Protocol` },
  { key: `IMC`, value: `integrated memory controller` },
  { key: `IMCR`, value: `interrupt mode configuration register` },
  { key: `IMR`, value: `interrupt mask register` },
  { key: `IMS`, value: `information management system` },
  {
    key: `INCITS`,
    value: `InterNational Committee for Information Technology Standards`,
  },
  { key: `IO`, value: `input/output` },
  { key: `IOCTL`, value: `input/output control` },
  { key: `IOMMU`, value: `input/output memory management unit` },
  { key: `IOT`, value: `Internet of Things` },
  { key: `IP`, value: `Internet Protocol` },
  { key: `IP`, value: `intellectual property` },
  { key: `IPC`, value: `interprocess communication` },
  { key: `IPE`, value: `integrated programming environment` },
  { key: `IPI`, value: `interprocessor interrupt` },
  { key: `IPNG`, value: `Internet Protocol, Next Generation` },
  { key: `IPS`, value: `in-plane switching` },
  { key: `IPS`, value: `intrusion prevention system` },
  { key: `IPSEC`, value: `Internet Protocol Security` },
  { key: `IRC`, value: `Internet Relay Chat` },
  { key: `IRDA`, value: `infrared data association` },
  { key: `IRQ`, value: `interrupt request` },
  { key: `IRQL`, value: `interrupt request level` },
  { key: `IRR`, value: `interrupt request register` },
  { key: `IRTF`, value: `Internet Research Task Force` },
  { key: `IS`, value: `information system` },
  { key: `ISA`, value: `industry standard architecture` },
  { key: `ISA`, value: `instruction set architecture` },
  { key: `ISDN`, value: `integrated services digital network` },
  { key: `ISI`, value: `inter-symbol interference` },
  { key: `ISM`, value: `industrial, scientific, [and] medical` },
  { key: `ISN`, value: `initial serial number` },
  { key: `ISO`, value: `International Standards Organization` },
  { key: `ISOC`, value: `Internet Society` },
  { key: `ISP`, value: `Internet service provider` },
  { key: `ISR`, value: `in-service register` },
  { key: `ISR`, value: `interrupt service routine` },
  { key: `IST`, value: `interrupt stack table` },
  { key: `ISV`, value: `independent software vendor` },
  { key: `IT`, value: `information technology` },
  { key: `ITB`, value: `Intel Turbo Boost` },
  { key: `IV`, value: `initialization vector` },
  { key: `IVT`, value: `interrupt vector table` },
  { key: `JBOD`, value: `just a bunch of disks` },
  { key: `JFET`, value: `junction [gate] field-effect transistor` },
  { key: `JIT`, value: `just in time` },
  { key: `JPEG`, value: `Joint Photographic Experts Group` },
  { key: `JRE`, value: `Java Runtime Environment` },
  { key: `JTAG`, value: `joint test action group` },
  { key: `KB`, value: `keyboard` },
  { key: `KB`, value: `kilobyte` },
  { key: `KBD`, value: `keyboard` },
  { key: `KBD`, value: `kilobaud` },
  { key: `KLOC`, value: `thousand lines of code` },
  { key: `KMS`, value: `kernel-mode setting` },
  { key: `KPI`, value: `kernel programming interface` },
  { key: `KVA`, value: `kernel virtual address` },
  { key: `KVM`, value: `kernel virtual machine` },
  { key: `KVM`, value: `kernel virtual memory` },
  { key: `KVM`, value: `keyboard, video, [and] mouse` },
  { key: `LAMP`, value: `Linux Apache MySQL {Perl,PHP,Python}` },
  { key: `LAN`, value: `local area network` },
  { key: `LAPIC`, value: `local advanced programmable interrupt controller` },
  { key: `LAR`, value: `load access rights` },
  { key: `LBA`, value: `logical block addressing` },
  { key: `LBS`, value: `location-based service` },
  { key: `LCD`, value: `liquid crystal display` },
  { key: `LCP`, value: `link control protocol` },
  { key: `LDA`, value: `local delivery agent` },
  { key: `LDAP`, value: `Lightweight Directory Access Protocol` },
  { key: `LDR`, value: `light-dependent resistor` },
  { key: `LDT`, value: `local descriptor table` },
  { key: `LE`, value: `logical extent` },
  { key: `LED`, value: `light emitting diode` },
  { key: `LER`, value: `label edge router` },
  { key: `LF`, value: `line feed` },
  { key: `LF`, value: `low frequency` },
  { key: `LFM`, value: `lowest frequency mode` },
  { key: `LFN`, value: `long file names` },
  { key: `LFO`, value: `low-frequency oscillation` },
  { key: `LFS`, value: `log-structured file system` },
  { key: `LFU`, value: `least frequently used` },
  { key: `LHP`, value: `loop heat pipe` },
  { key: `LIFO`, value: `last in, first out` },
  { key: `LILO`, value: `LInux LOader` },
  { key: `LILO`, value: `last in, last out` },
  { key: `LINT`, value: `local interrupt` },
  { key: `LIR`, value: `local Internet registry` },
  { key: `LKM`, value: `{Linux,loadable} kernel module` },
  { key: `LKML`, value: `Linux kernel mailing list` },
  { key: `LL`, value: `load linked` },
  { key: `LL/SC`, value: `load linked/store conditional` },
  { key: `LLC`, value: `logical link control` },
  { key: `LLDP`, value: `link layer discovery protocol` },
  { key: `LLF`, value: `low level format` },
  { key: `LLMNR`, value: `link-local multicast name resolution` },
  { key: `LLVM`, value: `Low Level Virtual Machine` },
  { key: `LM`, value: `long mode` },
  { key: `LMM`, value: `link management mode` },
  { key: `LNO`, value: `loop nest optimization` },
  { key: `LOC`, value: `lines of code` },
  { key: `LOM`, value: `lights-out management` },
  { key: `LPC`, value: `low pin count` },
  { key: `LPS`, value: `local positioning system` },
  { key: `LRC`, value: `longitudinal redundancy check` },
  { key: `LRM`, value: `left-to-right mark` },
  { key: `LRO`, value: `left-to-right override` },
  { key: `LRU`, value: `least recently used` },
  { key: `LSB`, value: `Linux standards base` },
  { key: `LSB`, value: `least significant {bit,byte}` },
  { key: `LSI`, value: `large scale integration` },
  { key: `LSL`, value: `load segment limit` },
  { key: `LSN`, value: `Large Scale NAT` },
  { key: `LSN`, value: `log sequence number` },
  { key: `LSR`, value: `label switch router` },
  { key: `LTCC`, value: `low temperature co-fired ceramic` },
  { key: `LTO`, value: `link time optimization` },
  { key: `LTR`, value: `left to right` },
  { key: `LTR`, value: `load task register` },
  { key: `LTR`, value: `letter(-sized paper)` },
  { key: `LUN`, value: `logical unit number` },
  { key: `LV`, value: `logical volume` },
  { key: `LVM`, value: `logical volume management` },
  { key: `LVT`, value: `local vector table` },
  { key: `LWP`, value: `light-weight process` },
  { key: `LZW`, value: `Lempel Ziv Welch` },
  { key: `MAC`, value: `mandatory access control` },
  { key: `MAC`, value: `medium access control` },
  { key: `MAC`, value: `message authentication {check,code}` },
  { key: `MADT`, value: `multiple APIC descriptor table` },
  { key: `MB`, value: `megabyte` },
  { key: `MBR`, value: `master boot record` },
  { key: `MBS`, value: `megabits per second` },
  { key: `MC`, value: `memory controller` },
  { key: `MCA`, value: `machine check architecture` },
  { key: `MCA`, value: `MicroChannel architecture` },
  { key: `MCC`, value: `multiversion concurrency control` },
  { key: `MCE`, value: `machine check exception` },
  { key: `MCGA`, value: `Multi-Color Graphics Array` },
  { key: `MCH`, value: `memory controller hub` },
  { key: `MCM`, value: `multi-chip module` },
  { key: `MCQ`, value: `memory controlled queue` },
  { key: `MD`, value: `machine-dependent` },
  { key: `MDA`, value: `mail delivery agent` },
  { key: `MDA`, value: `Monochrome Display Adapter` },
  { key: `MDRAM`, value: `multibank dynamic random access memory` },
  { key: `MESI`, value: `modified, exclusive, shared, invalid` },
  { key: `MFC`, value: `merge from current` },
  { key: `MFC`, value: `Microsoft Foundation Classes` },
  { key: `MFM`, value: `modified frequency modulation` },
  { key: `MI`, value: `machine-independent` },
  { key: `MIB`, value: `management information base` },
  { key: `MIC`, value: `message integrity {check,code}` },
  { key: `MID`, value: `mobile Internet device` },
  { key: `MIDI`, value: `musical instrument digital interface` },
  { key: `MIF`, value: `management information format` },
  { key: `MIM`, value: `man in the middle` },
  { key: `MIMD`, value: `multiple instruction, multiple data` },
  { key: `MIME`, value: `Multipurpose Internet Mail Extensions` },
  { key: `MIMO`, value: `multiple input multiple output` },
  { key: `MIPS`, value: `million instructions per second` },
  { key: `MISD`, value: `multiple instruction, single data` },
  { key: `MIT`, value: `Massachusetts Institute of Technology` },
  { key: `MITM`, value: `man in the middle` },
  { key: `ML`, value: `machine language` },
  { key: `ML`, value: `machine learning` },
  { key: `ML`, value: `mailing list` },
  { key: `ML`, value: `markup language` },
  { key: `ML`, value: `maximum likelihood` },
  { key: `MLC`, value: `multi-level cell` },
  { key: `MLHP`, value: `micro loop heat pipe` },
  { key: `MMIC`, value: `monolithic microwave integrated circuit` },
  { key: `MMIO`, value: `memory mapped input/output` },
  { key: `MMORPG`, value: `massive multiplayer online role playing game` },
  { key: `MMU`, value: `memory management unit` },
  { key: `MMX`, value: `matrix math extension` },
  { key: `MMX`, value: `multimedia extension` },
  { key: `MMX`, value: `multiple math extension` },
  { key: `MO`, value: `magneto-optical` },
  { key: `MOESI`, value: `modified, owned, exclusive, shared, invalid` },
  { key: `MOF`, value: `maximum operating frequency` },
  { key: `MOSFET`, value: `metal-oxide-semiconductor field-effect transistor` },
  { key: `MOSI`, value: `modified, owned, shared, invalid` },
  { key: `MP`, value: `multi-platform` },
  { key: `MP`, value: `multiplayer` },
  { key: `MP`, value: `{multiprocessing,multiprocessor}` },
  { key: `MPEG`, value: `moving picture experts group` },
  { key: `MPI`, value: `message passing interface` },
  { key: `MPLS`, value: `Multiprotocol Label Switching` },
  { key: `MPP`, value: `massively parallel processor` },
  { key: `MPS`, value: `memory pool system` },
  { key: `MPS`, value: `multiprocessor specification` },
  { key: `MR`, value: `modem ready` },
  { key: `MRU`, value: `most recently used` },
  { key: `MS`, value: `Microsoft` },
  { key: `MSB`, value: `most significant {bit,byte}` },
  { key: `MSE`, value: `mean square error` },
  { key: `MSF`, value: `minutes seconds frames` },
  { key: `MSI`, value: `message signaled interrupt` },
  { key: `MSI`, value: `modified, shared, invalid` },
  { key: `MSN`, value: `microsoft network` },
  { key: `MSR`, value: `machine state register` },
  { key: `MSS`, value: `maximum segment size` },
  { key: `MT`, value: `machine translation` },
  { key: `MTA`, value: `mail transfer agent` },
  { key: `MTBF`, value: `mean time between failures` },
  { key: `MTP`, value: `media transfer protocol` },
  { key: `MTRR`, value: `memory type range register` },
  { key: `MTTF`, value: `mean time to failure` },
  { key: `MTU`, value: `maximum transmission unit` },
  { key: `MUA`, value: `mail user agent` },
  { key: `MUD`, value: `multi-user domain` },
  { key: `MVCC`, value: `multiversion concurrency control` },
  { key: `MWE`, value: `module width encoding` },
  { key: `MX`, value: `mail exchange` },
  { key: `NACK`, value: `negative acknowledgement` },
  { key: `NAN`, value: `not a number` },
  { key: `NAPT`, value: `Network Address Port Translation` },
  { key: `NAS`, value: `network attached storage` },
  { key: `NAT`, value: `network address translation` },
  { key: `NAV`, value: `network allocation vector` },
  { key: `NC`, value: `numerical control` },
  { key: `NCO`, value: `numerically-controlled oscillator` },
  { key: `NCP`, value: `Network Control Protocol` },
  { key: `NCQ`, value: `native command queuing` },
  { key: `ND`, value: `neighbor discovery` },
  { key: `NDFA`, value: `nondeterministic finite automaton` },
  { key: `NE`, value: `numeric error` },
  { key: `NFA`, value: `nondeterministic finite automaton` },
  { key: `NFS`, value: `network file system` },
  { key: `NIA`, value: `next instruction address` },
  { key: `NIC`, value: `network information center` },
  { key: `NIC`, value: `network interface card` },
  { key: `NIDS`, value: `network intrusion detection system` },
  { key: `NIP`, value: `network interface protocol` },
  { key: `NIPS`, value: `network intrusion prevention system` },
  { key: `NIS`, value: `network information service` },
  { key: `NLS`, value: `native language support` },
  { key: `NMI`, value: `non-maskable interrupt` },
  { key: `NNTP`, value: `Network News Transfer Protocol` },
  { key: `NOC`, value: `network operations center` },
  { key: `NOP`, value: `no operation` },
  { key: `NOS`, value: `network operating system` },
  { key: `NP`, value: `nondeterministic polynomial time` },
  { key: `NRZ`, value: `non-return to zero` },
  { key: `NSA`, value: `National Security Agency` },
  { key: `NTM`, value: `non-deterministic Turing machine` },
  { key: `NTP`, value: `Network Time Protocol` },
  { key: `NUMA`, value: `non-uniform memory access` },
  { key: `NVRAM`, value: `non-volatile random access memory` },
  { key: `NW`, value: `not write-through` },
  { key: `NX`, value: `no execute` },
  { key: `OAEP`, value: `optimal asymmetric encryption padding` },
  { key: `OBO`, value: `off by one` },
  { key: `OBOE`, value: `off by one error` },
  { key: `OCL`, value: `object constraint language` },
  { key: `OCR`, value: `optical character recognition` },
  { key: `ODCM`, value: `on-demand clock modulation` },
  { key: `ODT`, value: `on-die termination` },
  { key: `OEM`, value: `original equipment manufacturer` },
  { key: `OFDM`, value: `orthogonal frequency division multiplexing` },
  { key: `OFET`, value: `organic field-effect transistor` },
  { key: `OLAP`, value: `online analytical processing` },
  { key: `OLE`, value: `object linking and embedding` },
  { key: `OLTP`, value: `online transaction processing` },
  { key: `ONFI`, value: `open nand flash interface` },
  { key: `OO`, value: `OpenOffice` },
  { key: `OO`, value: `object oriented` },
  { key: `OOB`, value: `out of band` },
  { key: `OOE`, value: `out of order execution` },
  { key: `OOM`, value: `out of memory` },
  { key: `OOO`, value: `OpenOffice.org` },
  { key: `OOP`, value: `object oriented programming` },
  { key: `OOPS`, value: `object oriented programming systems` },
  { key: `OOSE`, value: `object oriented software engineering` },
  { key: `OPM`, value: `operations per minute` },
  { key: `OPS`, value: `operations per second` },
  { key: `OQL`, value: `Object Query Language` },
  { key: `ORB`, value: `object request broker` },
  { key: `ORM`, value: `object-relational mapping` },
  { key: `OS`, value: `operating system` },
  { key: `OSD`, value: `open source definition` },
  { key: `OSF`, value: `open software foundation` },
  { key: `OSI`, value: `Open Source Initiative` },
  { key: `OSI`, value: `open systems interconnection` },
  { key: `OSPF`, value: `open shortest path first` },
  { key: `OSPM`, value: `OS power management` },
  { key: `OSS`, value: `open sound system` },
  { key: `OSS`, value: `open source software` },
  { key: `OSVW`, value: `operating system visible workarounds` },
  { key: `OTP`, value: `one time password` },
  { key: `OTP`, value: `open telecom platform` },
  { key: `OU`, value: `organizational unit` },
  { key: `OUI`, value: `organizationally unique identifier` },
  { key: `OWL`, value: `Web Ontology Language` },
  { key: `P2P`, value: `PCI to PCI` },
  { key: `P2P`, value: `peer to peer` },
  { key: `PA`, value: `phase accumulator` },
  { key: `PA`, value: `physical address` },
  { key: `PAC`, value: `phase-amplitude converter` },
  { key: `PAE`, value: `physical address extension` },
  { key: `PAL`, value: `phase alternating line` },
  { key: `PAL`, value: `programmable array logic` },
  { key: `PAM`, value: `pluggable authentication modules` },
  { key: `PAM`, value: `pulse amplitude modulation` },
  { key: `PAP`, value: `password authentication protocol` },
  { key: `PAT`, value: `page attribute table` },
  { key: `PAT`, value: `port address translation` },
  { key: `PATA`, value: `parallel ATA` },
  { key: `PAX`, value: `portable archive exchange` },
  { key: `PBE`, value: `pending break encoding` },
  { key: `PBE`, value: `programming by example` },
  { key: `PC`, value: `personal computer` },
  { key: `PC`, value: `program counter` },
  { key: `PCB`, value: `printed circuit board` },
  { key: `PCC`, value: `Portable C Compiler` },
  { key: `PCD`, value: `page-level cache disable` },
  { key: `PCE`, value: `performance-monitor counter enable` },
  { key: `PCI`, value: `peripheral component interconnect` },
  { key: `PCM`, value: `phase change memory` },
  { key: `PCM`, value: `pulse code modulation` },
  {
    key: `PCMCIA`,
    value: `Personal Computer Memory Card International Association`,
  },
  { key: `PCP`, value: `Port Control Protocol` },
  { key: `PD`, value: `public domain` },
  { key: `PDA`, value: `personal digital assistant` },
  { key: `PDA`, value: `pushdown automaton` },
  { key: `PDAG`, value: `propositional directed acyclic graph` },
  { key: `PDB`, value: `power distribution board` },
  { key: `PDF`, value: `portable document format` },
  { key: `PDM`, value: `pulse-duration modulation` },
  { key: `PDN`, value: `pull-down network` },
  { key: `PDP`, value: `page {descriptor,directory} page` },
  { key: `PDS`, value: `product data sheet` },
  { key: `PDU`, value: `protocol data unit` },
  { key: `PE`, value: `protection enable` },
  { key: `PECI`, value: `platform environment control interface` },
  { key: `PEP`, value: `protocol extension protocol` },
  { key: `PER`, value: `packed encoding rules` },
  { key: `PFS`, value: `perfect forward secrecy` },
  { key: `PGAS`, value: `partitioned global address space` },
  { key: `PGE`, value: `page global enable` },
  { key: `PGP`, value: `Pretty Good Privacy` },
  { key: `PHB`, value: `PCI host bridge` },
  { key: `PHP`, value: `PHP: Hypertext Preprocessor` },
  { key: `PIC`, value: `position independent code` },
  { key: `PIC`, value: `programmable interrupt controller` },
  { key: `PICNIC`, value: `problem in chair, not in computer` },
  { key: `PID`, value: `process id` },
  { key: `PIE`, value: `position independent executable` },
  { key: `PIM`, value: `personal information manager` },
  { key: `PIM`, value: `platform-independent model` },
  { key: `PIO`, value: `programmed input/output` },
  { key: `PIPT`, value: `physically indexed, physically tagged` },
  { key: `PIQ`, value: `prefetch input queue` },
  { key: `PIT`, value: `programmable interrupt timer` },
  { key: `PIV`, value: `personal identity verification` },
  { key: `PKCS`, value: `public-key cryptography standards` },
  { key: `PKI`, value: `public key infrastructure` },
  { key: `PLC`, value: `programmable logic controller` },
  { key: `PLD`, value: `programmable logic device` },
  { key: `PLL`, value: `phase locked loop` },
  { key: `PLRU`, value: `pseudo LRU` },
  { key: `PLTM`, value: `package level thermal management` },
  { key: `PM`, value: `power management` },
  { key: `PM`, value: `{phase,pulse} modulation` },
  { key: `PME`, value: `power management event` },
  { key: `PMI`, value: `platform management interrupt` },
  { key: `PMIO`, value: `port-mapped input/output` },
  { key: `PMT`, value: `photo-multiplier tube` },
  { key: `PMU`, value: `power management unit` },
  { key: `PNG`, value: `portable network graphics` },
  { key: `PNP`, value: `plug and play` },
  { key: `POE`, value: `power over ethernet` },
  { key: `POF`, value: `probability of failure` },
  { key: `POP`, value: `Post Office Protocol` },
  { key: `POP`, value: `power on password` },
  { key: `POSIX`, value: `Portable Operating System Interface [for Unix]` },
  { key: `POST`, value: `power on self test` },
  { key: `POTS`, value: `plain old telephone system` },
  { key: `PP`, value: `pair programming` },
  { key: `PPB`, value: `PCI [to] PCI bridge` },
  { key: `PPC`, value: `PowerPC` },
  { key: `PPI`, value: `pixels per inch` },
  { key: `PPM`, value: `pages per minute` },
  { key: `PPP`, value: `Point-to-Point Protocol` },
  { key: `PPPOA`, value: `Point-to-Point Protocol over ATM` },
  { key: `PPPOE`, value: `Point-to-Point Protocol over Ethernet` },
  { key: `PPU`, value: `physics processing unit` },
  { key: `PRBS`, value: `pseudo-random bit sequence` },
  { key: `PRML`, value: `partial response, maximum likelihood` },
  { key: `PRN`, value: `pseudo random {noise,number}` },
  { key: `PRNG`, value: `pseudo random number generator` },
  { key: `PROM`, value: `programmable read only memory` },
  { key: `PSD`, value: `power spectral density` },
  { key: `PSE`, value: `page size extensions` },
  { key: `PSK`, value: `phase shift keying` },
  { key: `PSK`, value: `pre-shared key` },
  { key: `PSTN`, value: `public switched telephone network` },
  { key: `PSW`, value: `program status word` },
  { key: `PTE`, value: `page table entry` },
  { key: `PTLA`, value: `pseudo top level aggregator` },
  { key: `PTP`, value: `page table page` },
  { key: `PTV`, value: `perceived target value` },
  { key: `PU`, value: `processing unit` },
  { key: `PUN`, value: `physical unit number` },
  { key: `PV`, value: `physical volume` },
  { key: `PVG`, value: `physical volume group` },
  { key: `PVI`, value: `protected-mode virtual interrupt` },
  { key: `PWM`, value: `pulse width modulation` },
  { key: `PXE`, value: `preboot execution environment` },
  { key: `QA`, value: `quality assurance` },
  { key: `QAM`, value: `quadrature amplitude modulation` },
  { key: `QAM`, value: `quality assurance management` },
  { key: `QBE`, value: `query by example` },
  { key: `QC`, value: `quality control` },
  { key: `QDI`, value: `quasi delay insensitive` },
  { key: `QOS`, value: `quality of service` },
  { key: `R/O`, value: `read only` },
  { key: `R/W`, value: `read/write` },
  { key: `RA`, value: `receiver address` },
  { key: `RA`, value: `remote assistance` },
  { key: `RA`, value: `resource affinity` },
  { key: `RA`, value: `router advertisement` },
  { key: `RAD`, value: `rapid application development` },
  { key: `RAID`, value: `redundant array of {independent,inexpensive} disks` },
  { key: `RAM`, value: `random access memory` },
  { key: `RAS`, value: `reliability, availability and serviceability` },
  { key: `RAS`, value: `remote access service` },
  { key: `RAS`, value: `restartable atomic sequence` },
  { key: `RAS`, value: `row address strobe` },
  { key: `RBF`, value: `radial basis function` },
  { key: `RBT`, value: `red-black tree` },
  { key: `RC`, value: `release candidate` },
  { key: `RC`, value: `remote control` },
  { key: `RCS`, value: `Revision Control System` },
  { key: `RCS`, value: `revision control system` },
  { key: `RCU`, value: `read, copy, update` },
  { key: `RDB`, value: `Rigid Disk Block` },
  { key: `RDBMS`, value: `relational database management system` },
  { key: `RDF`, value: `Resource Description Framework` },
  { key: `RDM`, value: `relational data model` },
  { key: `RDMA`, value: `remote direct memory access` },
  { key: `RE`, value: `regular expression` },
  { key: `REST`, value: `representational state transfer` },
  { key: `RF`, value: `radio frequency` },
  { key: `RFI`, value: `radio frequency interference` },
  { key: `RFO`, value: `request for ownership` },
  { key: `RGB`, value: `red green blue` },
  { key: `RGBA`, value: `red green blue alpha` },
  { key: `RH`, value: `read hit` },
  { key: `RHEL`, value: `Red Hat Enterprise Linux` },
  { key: `RHL`, value: `Red Hat Linux` },
  { key: `RIB`, value: `routing information base` },
  { key: `RIFF`, value: `Resource Interchange File Format` },
  { key: `RIP`, value: `Routing Information Protocol` },
  { key: `RIR`, value: `regional Internet registry` },
  { key: `RISC`, value: `reduced instruction set {computer,computing}` },
  { key: `RKM`, value: `ROM Kernel Manual` },
  { key: `RLE`, value: `run length encoding` },
  { key: `RLL`, value: `run length limited` },
  { key: `RLO`, value: `right-to-left override` },
  { key: `RM`, value: `read miss` },
  { key: `RMI`, value: `remote method invocation` },
  { key: `RMPM`, value: `rapid memory power management` },
  { key: `RMS`, value: `root mean square` },
  { key: `RMW`, value: `read, modify, write` },
  { key: `RNG`, value: `random number generator` },
  { key: `ROM`, value: `read only memory` },
  { key: `RPC`, value: `remote procedure call` },
  { key: `RPL`, value: `requested privilege level` },
  { key: `RPM`, value: `revolutions per minute` },
  { key: `RPN`, value: `reverse Polish notation` },
  { key: `RR`, value: `random replacement` },
  { key: `RR`, value: `round robin` },
  { key: `RS`, value: `relay station` },
  { key: `RSA`, value: `Rivest, Shamir, [and] Adleman` },
  { key: `RSIP`, value: `Realm Specific IP` },
  { key: `RSS`, value: `really simple syndication` },
  { key: `RSS`, value: `residual sum of squares` },
  { key: `RT`, value: `real time` },
  { key: `RTC`, value: `real time clock` },
  { key: `RTC`, value: `real time computing` },
  { key: `RTF`, value: `rich text format` },
  { key: `RTL`, value: `register transfer language` },
  { key: `RTL`, value: `resistor-transistor logic` },
  { key: `RTL`, value: `right to left` },
  { key: `RTOS`, value: `real time operating system` },
  { key: `RTS`, value: `request to send` },
  { key: `RTT`, value: `round trip time` },
  { key: `RUP`, value: `rational unified process` },
  { key: `RWM`, value: `read-write memory` },
  { key: `RX`, value: `{receive,receiver}` },
  { key: `S/PDIF`, value: `Sony/Philips Digital Interface Format` },
  { key: `SA`, value: `security advisory` },
  { key: `SA`, value: `security association` },
  { key: `SA`, value: `source address` },
  { key: `SA`, value: `structured analysis` },
  { key: `SAAS`, value: `software as a service` },
  { key: `SACD`, value: `super audio compact disc` },
  { key: `SAD`, value: `security association database` },
  { key: `SAL`, value: `system abstraction layer` },
  { key: `SAM`, value: `serial access memory` },
  { key: `SAM`, value: `sum addressed memory` },
  { key: `SAN`, value: `storage area network` },
  {
    key: `SAPIC`,
    value: `streamlined advanced programmable interrupt controller`,
  },
  { key: `SASD`, value: `structured analysis, structured design` },
  { key: `SASI`, value: `Shugart Associates System Interface` },
  { key: `SASL`, value: `simple authentication [and] security layer` },
  { key: `SATA`, value: `serial advanced technology attachment` },
  { key: `SB`, value: `sound blaster` },
  { key: `SBU`, value: `standard build unit` },
  { key: `SC`, value: `store conditional` },
  { key: `SCA`, value: `source code analyzer` },
  { key: `SCADA`, value: `supervisory control and data acquisition` },
  { key: `SCC`, value: `single chip cloud` },
  { key: `SCC`, value: `source code control` },
  { key: `SCCS`, value: `Source Code Control System` },
  { key: `SCI`, value: `scalable coherent interface` },
  { key: `SCI`, value: `system control interrupt` },
  { key: `SCM`, value: `software configuration management` },
  { key: `SCM`, value: `source code management` },
  { key: `SCM`, value: `storage-class memory` },
  { key: `SCP`, value: `secure copy` },
  { key: `SCSI`, value: `Small Computer System Interface` },
  { key: `SCTP`, value: `Stream Control Transmission Protocol` },
  { key: `SDI`, value: `symbol deinterleave` },
  { key: `SDK`, value: `software development kit` },
  { key: `SDL`, value: `Simple Declarative Language` },
  { key: `SDL`, value: `Simple Direct-media Layer ` },
  { key: `SDRAM`, value: `synchronous dynamic random access memory` },
  { key: `SDT`, value: `syntax-directed translation` },
  { key: `SEGV`, value: `segmentation violation` },
  { key: `SEO`, value: `search engine optimization` },
  { key: `SFC`, value: `sequential function chart` },
  { key: `SFI`, value: `simple firmware interface` },
  { key: `SFI`, value: `software fault isolation` },
  { key: `SFTP`, value: `SSH File Transfer Protocol` },
  { key: `SFTP`, value: `Serial File Transfer Protocol` },
  { key: `SFTP`, value: `Simple File Transfer Protocol` },
  { key: `SGRAM`, value: `synchronous graphics random access memory` },
  { key: `SIFS`, value: `short inter-frame space` },
  { key: `SIMD`, value: `single instruction, multiple data` },
  { key: `SIMM`, value: `single inline memory module` },
  { key: `SIP`, value: `Session Initiation Protocol` },
  { key: `SIR`, value: `signal-to-interference ratio` },
  { key: `SIR`, value: `slow infrared` },
  { key: `SISD`, value: `single instruction, single data` },
  { key: `SLC`, value: `single-level cell` },
  { key: `SLDRAM`, value: `synchronous-link dynamic random access memory` },
  { key: `SLED`, value: `single large expensive disk` },
  { key: `SLI`, value: `scalable link interface` },
  { key: `SLI`, value: `scan-line interleave` },
  { key: `SLOC`, value: `source lines of code` },
  { key: `SLRU`, value: `segmented LRU` },
  { key: `SMA`, value: `smart memory access` },
  { key: `SMAF`, value: `system management action field` },
  { key: `SMART`, value: `self-monitoring analysis and reporting technology` },
  { key: `SMBIOS`, value: `System Management BIOS` },
  { key: `SMC`, value: `system management controller` },
  { key: `SMI`, value: `structure of management information` },
  { key: `SMI`, value: `system management interrupt` },
  { key: `SMM`, value: `system management mode` },
  { key: `SMP`, value: `symmetric multiprocessing` },
  { key: `SMT`, value: `simultaneous multithreading` },
  { key: `SMTP`, value: `Simple Mail Transfer Protocol` },
  { key: `SMU`, value: `system management unit` },
  { key: `SNMP`, value: `Simple Network Management Protocol` },
  { key: `SNR`, value: `signal-to-noise ratio` },
  { key: `SOA`, value: `service oriented architecture` },
  { key: `SOAP`, value: `Simple Object Access Protocol` },
  { key: `SOC`, value: `system on chip` },
  { key: `SOF`, value: `start of frame` },
  { key: `SOH`, value: `start of header` },
  { key: `SOHO`, value: `small office/home office` },
  { key: `SOL`, value: `serial over LAN` },
  { key: `SP`, value: `service pack` },
  { key: `SP`, value: `stack pointer` },
  { key: `SPARC`, value: `scalable processor architecture` },
  { key: `SPARQL`, value: `SPARQL Protocol and RDF Query Language` },
  { key: `SPD`, value: `security policy database` },
  { key: `SPD`, value: `serial presence detect` },
  { key: `SPDIF`, value: `Sony/Philips digital interface format` },
  { key: `SPI`, value: `serial peripheral interface` },
  { key: `SPI`, value: `stateful packet inspection` },
  { key: `SPMD`, value: `single process, multiple data` },
  { key: `SPR`, value: `special purpose register` },
  { key: `SPT`, value: `sectors per track` },
  { key: `SQA`, value: `software quality assurance` },
  { key: `SQL`, value: `Structured Query Language` },
  { key: `SRAM`, value: `static random access memory` },
  { key: `SRC`, value: `sample rate conversion` },
  { key: `SS`, value: `self-snoop` },
  { key: `SS`, value: `stack segment` },
  { key: `SSB`, value: `single-sideband modulation` },
  { key: `SSD`, value: `solid state drive` },
  { key: `SSE`, value: `streaming SIMD extensions` },
  { key: `SSFDC`, value: `solid state floppy disc card` },
  { key: `SSH`, value: `secure shell` },
  { key: `SSI`, value: `server side includes` },
  { key: `SSID`, value: `service set identifier` },
  { key: `SSL`, value: `secure sockets layer` },
  { key: `SSP`, value: `stack smashing protection` },
  { key: `STC`, value: `software thermal control` },
  { key: `STD`, value: `state transition diagram` },
  { key: `STP`, value: `Spanning Tree Protocol` },
  { key: `STP`, value: `shielded twisted pair` },
  { key: `SUS`, value: `Single Unix Specification` },
  { key: `SUT`, value: `system under test` },
  { key: `SVG`, value: `scalable vector graphics` },
  { key: `SVGA`, value: `Super Video Graphics Array` },
  { key: `SVM`, value: `secure virtual machine` },
  { key: `SVM`, value: `support vector machine` },
  { key: `SVR`, value: `System V Release` },
  { key: `SWF`, value: `Shockwave Flash` },
  { key: `SWIG`, value: `simplified wrapper [and] interface generator` },
  { key: `SYR`, value: `symbol timing recovery` },
  { key: `TA`, value: `test assertion` },
  { key: `TA`, value: `transmitter address` },
  { key: `TAI`, value: `international atomic time` },
  { key: `TAO`, value: `track at once` },
  { key: `TAOCP`, value: `The Art of Computer Programming` },
  { key: `TAP`, value: `Test Anything Protocol` },
  { key: `TAS`, value: `test and set` },
  { key: `TB`, value: `terabyte` },
  { key: `TCB`, value: `trace capture buffer` },
  { key: `TCB`, value: `trusted computing base` },
  { key: `TCC`, value: `thermal control circuit` },
  { key: `TCL`, value: `tool command language` },
  { key: `TCP`, value: `Transmission Control Protocol` },
  { key: `TCQ`, value: `tagged command queueing` },
  { key: `TDC`, value: `time [to] digital converter` },
  { key: `TDD`, value: `test driven development` },
  { key: `TDD`, value: `time division duplex` },
  { key: `TDM`, value: `time division multiplexing` },
  { key: `TDMA`, value: `time division multiple access` },
  { key: `TDOA`, value: `time difference of arrival` },
  { key: `TDP`, value: `thermal design {point,power}` },
  { key: `TECO`, value: `Text Editor and Corrector` },
  { key: `TFT`, value: `thin film transistor` },
  { key: `TFTP`, value: `Trivial File Transfer Protocol` },
  { key: `TIAS`, value: `try it and see` },
  { key: `TIFF`, value: `tagged image file format` },
  { key: `TITS`, value: `try it to see` },
  { key: `TK`, value: `temporal key` },
  { key: `TKIP`, value: `Temporal Key Integrity Protocol` },
  { key: `TLA`, value: `top level aggregator` },
  { key: `TLB`, value: `translation lookaside buffer` },
  { key: `TLD`, value: `top level domain` },
  { key: `TLS`, value: `thread local storage` },
  { key: `TLS`, value: `transport layer security` },
  { key: `TM`, value: `Turing machine` },
  { key: `TM`, value: `thermal monitor` },
  { key: `TMDS`, value: `transition minimized differential signaling` },
  { key: `TMO`, value: `timeout` },
  { key: `TOD`, value: `time of day` },
  { key: `TOS`, value: `terms of service` },
  { key: `TOS`, value: `trusted operating system` },
  { key: `TOS`, value: `type of service` },
  { key: `TP`, value: `transaction processing` },
  { key: `TPI`, value: `tracks per inch` },
  { key: `TPM`, value: `transactions per minute` },
  { key: `TPM`, value: `trusted platform module` },
  { key: `TPR`, value: `task priority register` },
  { key: `TPS`, value: `transactions per second` },
  { key: `TPS`, value: `transmission parameters signaling` },
  { key: `TR`, value: `task register` },
  { key: `TR`, value: `token ring` },
  { key: `TRL`, value: `timing recovery loop` },
  { key: `TRNG`, value: `true random number generator` },
  { key: `TS`, value: `terminal services` },
  { key: `TS`, value: `time series` },
  { key: `TS`, value: `time stamp` },
  { key: `TS`, value: `transport stream` },
  { key: `TSC`, value: `time stamp counter` },
  { key: `TSD`, value: `time stamp disable` },
  { key: `TSL`, value: `test, set, lock` },
  { key: `TSO`, value: `time sharing option` },
  { key: `TSP`, value: `Time-Stamp Protocol` },
  { key: `TSP`, value: `Tunnel Setup Protocol` },
  { key: `TSP`, value: `time synchronization protocol` },
  { key: `TSP`, value: `traveling salesman problem` },
  { key: `TSS`, value: `task state segment` },
  { key: `TTL`, value: `time to live` },
  { key: `TTL`, value: `transistor-transistor logic` },
  { key: `TTM`, value: `translation table maps` },
  { key: `TTY`, value: `teletype` },
  { key: `TUI`, value: `{terminal,text-based,textual} user interface` },
  { key: `TX`, value: `{transmit out,transmitter}` },
  { key: `TZ`, value: `time zone` },
  { key: `UAC`, value: `user {access,account} control` },
  { key: `UART`, value: `universal asynchronous receiver/transmitter` },
  { key: `UAT`, value: `user acceptance testing` },
  { key: `UC`, value: `uncacheable` },
  { key: `UCS`, value: `uniform-cost search` },
  { key: `UDMA`, value: `ultra DMA` },
  { key: `UDO`, value: `ultra density optical` },
  { key: `UDP`, value: `User Datagram Protocol` },
  { key: `UFS`, value: `Unix File System` },
  { key: `UI`, value: `unit interval` },
  { key: `UI`, value: `user interface` },
  { key: `UID`, value: `unique identifier` },
  { key: `UID`, value: `user identifier` },
  { key: `UL`, value: `upload` },
  { key: `UMA`, value: `uniform memory access` },
  { key: `UMA`, value: `upper memory area` },
  { key: `UMB`, value: `upper memory block` },
  { key: `UML`, value: `unified modeling language` },
  { key: `UMPC`, value: `ultra-mobile PC` },
  { key: `UPNP`, value: `universal plug and play` },
  { key: `UPS`, value: `uninterruptible power supply` },
  { key: `URI`, value: `uniform resource identifier` },
  { key: `URL`, value: `uniform resource locator` },
  { key: `URN`, value: `uniform resource name` },
  {
    key: `USART`,
    value: `universal synchronous/asynchronous receiver/transmitter`,
  },
  { key: `USB`, value: `universal serial bus` },
  { key: `USWC`, value: `uncacheable speculative write combining` },
  { key: `UT`, value: `unit test` },
  { key: `UTC`, value: `coordinated universal time` },
  { key: `UTP`, value: `unshielded twisted pair` },
  { key: `UUCP`, value: `Unix-to-Unix Copy Protocol` },
  { key: `UUID`, value: `universally unique identifier` },
  { key: `UUOC`, value: `useless use of cat` },
  { key: `UUT`, value: `unit under test` },
  { key: `UX`, value: `user experience` },
  { key: `VA`, value: `vertical alignment` },
  { key: `VA`, value: `virtual address` },
  { key: `VA`, value: `volt-ampere` },
  { key: `VAX`, value: `virtual address extension` },
  { key: `VB`, value: `Visual Basic` },
  { key: `VCA`, value: `variable-gain amplifier` },
  { key: `VCC`, value: `common collector voltage` },
  { key: `VCF`, value: `voltage-controlled filter` },
  { key: `VCM`, value: `virtual channel memory` },
  { key: `VCO`, value: `voltage-controlled oscillator` },
  { key: `VCS`, value: `version control system` },
  { key: `VESA`, value: `Video Electronics Standards Association` },
  { key: `VFO`, value: `variable-frequency oscillator` },
  { key: `VG`, value: `volume group` },
  { key: `VGA`, value: `Video Graphics Array` },
  { key: `VHDCI`, value: `very high density cable interconnect` },
  { key: `VID`, value: `voltage level identifier` },
  { key: `VIPT`, value: `virtually indexed, physically tagged` },
  { key: `VIVT`, value: `virtually indexed, virtually tagged` },
  { key: `VLAN`, value: `virtual local area network` },
  { key: `VLIW`, value: `very long instruction word` },
  { key: `VLSI`, value: `very large scale integration` },
  { key: `VLSM`, value: `variable length subnet mask` },
  { key: `VM`, value: `virtual {machine,memory}` },
  { key: `VME`, value: `virtual mode extension` },
  { key: `VMX`, value: `vector multimedia extensions` },
  { key: `VMX`, value: `virtual machine extensions` },
  { key: `VOD`, value: `video on demand` },
  { key: `VPN`, value: `virtual private network` },
  { key: `VR`, value: `virtual reality` },
  { key: `VRAM`, value: `video random access memory` },
  { key: `VRM`, value: `voltage regulator module` },
  { key: `VRRP`, value: `Virtual Router Redundancy Protocol` },
  { key: `W`, value: `watt` },
  { key: `W3C`, value: `World Wide Web Consortium` },
  { key: `WAN`, value: `wide area network` },
  { key: `WAP`, value: `Wireless Application Protocol` },
  { key: `WAP`, value: `wireless access point` },
  { key: `WDT`, value: `watchdog timer` },
  { key: `WEP`, value: `Wired Equivalent Privacy` },
  { key: `WFI`, value: `wait for interrupt` },
  { key: `WFQ`, value: `weighted fair queuing` },
  { key: `WH`, value: `write hit` },
  { key: `WIFI`, value: `wireless fidelity` },
  { key: `WLAN`, value: `wireless local area network` },
  { key: `WM`, value: `write miss` },
  { key: `WMI`, value: `Windows Management Instrumentation` },
  { key: `WOL`, value: `Wake-on-LAN` },
  { key: `WOM`, value: `Wake-on-Modem` },
  { key: `WOR`, value: `Wake-on-Ring` },
  { key: `WORM`, value: `write once read many` },
  { key: `WP`, value: `WordPerfect` },
  { key: `WP`, value: `word processor` },
  { key: `WP`, value: `write protect` },
  { key: `WPA`, value: `Wi-Fi Protected Access` },
  { key: `WPA2`, value: `Wi-Fi Protected Access II` },
  { key: `WPS`, value: `Wi-Fi Protected Setup` },
  { key: `WRAM`, value: `window random access memory` },
  { key: `WS`, value: `web services` },
  { key: `WTC`, value: `write through caching` },
  { key: `WWAN`, value: `wireless wide area network` },
  { key: `WWW`, value: `world wide web` },
  { key: `WYSIWYG`, value: `what you see is what you get` },
  { key: `XBAR`, value: `crossbar` },
  { key: `XDMCP`, value: `X Display Manager control protocol` },
  { key: `XER`, value: `XML encoding rules` },
  { key: `XGA`, value: `Extended Graphics Array` },
  { key: `XIP`, value: `execute in place` },
  { key: `XML`, value: `Extensible Markup Language` },
  { key: `XOR`, value: `exclusive or` },
  { key: `XP`, value: `extreme programming` },
  { key: `XSI`, value: `X/Open System Interface` },
  { key: `XSL`, value: `extensible stylesheet language` },
  { key: `XSS`, value: `cross site scripting` },
  { key: `XT`, value: `extended technology` },
  { key: `XUL`, value: `XML user interface language` },
  { key: `YACC`, value: `yet another compiler compiler` },
  { key: `YAWPFAPR`, value: `you are welcome; please file a problem report` },
  { key: `YP`, value: `Yellow Pages` },
  { key: `YTD`, value: `year to date` },
  { key: `ZBR`, value: `zone bit recording` },
  { key: `ZFOD`, value: `zero-filled on demand` },
  { key: `ZIF`, value: `zero insertion force` },
  { key: `ZIFS`, value: `zero insertion force socket` },
  { key: `ZMA`, value: `zone multicast address` },
];

const src = { extended, complicated, offensive };

export default src;
